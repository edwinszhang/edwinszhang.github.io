{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cactus-dark/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/cactus-dark/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/justified-gallery/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/justified-gallery/justifiedGallery.min.css","path":"lib/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/styles.css","path":"lib/meslo-LG/styles.css","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-dark/source/images/theme overview.psd","path":"images/theme overview.psd","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1506997613000},{"_id":"themes/cactus-dark/_config.yml","hash":"b13d6691bc7061c6fb1f34cd4dc457b166775ed9","modified":1507003014000},{"_id":"themes/cactus-dark/LICENSE","hash":"4d5f5f360a18c68f0fd1897bdb1eb1210c2893e3","modified":1506955448000},{"_id":"themes/cactus-dark/README.md","hash":"f38b2f4771eeccc0ae0959ac3e3c485a9d159d4a","modified":1506955448000},{"_id":"source/_data/projects.json","hash":"c4d2f9f410e5213465239ff8be65f8835b999d23","modified":1507003494000},{"_id":"source/_posts/.DS_Store","hash":"65b7ce246f8629f33cbcdf17435050fe5132745c","modified":1506997618000},{"_id":"source/_drafts/hack-your-neighbors-wifi.md","hash":"924535cbd8cf50bb15dfcc3508cc9ddf3b3cfaea","modified":1507472888000},{"_id":"source/about/index.md","hash":"6f719702238f4cf6404f55bc19b5140270078320","modified":1510219805252},{"_id":"themes/cactus-dark/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1506955448000},{"_id":"themes/cactus-dark/.git/config","hash":"2b506d51540e6bdc72957c335c621b206b019990","modified":1506955448000},{"_id":"themes/cactus-dark/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1506955426000},{"_id":"themes/cactus-dark/.git/index","hash":"ee4c54e37f2e9be16c80f7dd8740c40e2afda789","modified":1506957068000},{"_id":"themes/cactus-dark/.git/packed-refs","hash":"06e90d1a99288e97f6d178771ff1832181d7091a","modified":1506955448000},{"_id":"themes/cactus-dark/layout/index.ejs","hash":"746e12dd24b70414b40d685ce3a279f55b2c070d","modified":1509513585457},{"_id":"themes/cactus-dark/layout/archive.ejs","hash":"ab9798bf534485a4fed4d3089011421858afdd26","modified":1506955448000},{"_id":"themes/cactus-dark/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1506955448000},{"_id":"themes/cactus-dark/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1506955448000},{"_id":"themes/cactus-dark/layout/layout.ejs","hash":"8484532ad7c4da22f46fc1394bb2fd9ded34be1f","modified":1506955448000},{"_id":"themes/cactus-dark/layout/page.ejs","hash":"b6b7b1e6dc856a0e62f35da0151f67ba41143e04","modified":1506955448000},{"_id":"themes/cactus-dark/layout/post.ejs","hash":"2731e597b5d1714a6f5a775c432e99785f02a3e3","modified":1506955448000},{"_id":"source/_posts/durian/couchBase-tutorials.md","hash":"5826d0b1e8bf3dd0d94a8dfd7d8f5aa632d97b53","modified":1510216269518},{"_id":"themes/cactus-dark/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1506955426000},{"_id":"themes/cactus-dark/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1506955426000},{"_id":"themes/cactus-dark/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1506955426000},{"_id":"themes/cactus-dark/.git/logs/HEAD","hash":"9b6bc56960f8cdcd0d93a33ed17c1247b1f672ca","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/comments.ejs","hash":"853a4500da515ef3facc51a055886eaf8efd080d","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/head.ejs","hash":"7782e6b1ce72fcf121f0017d383e2fb87e72c539","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/header.ejs","hash":"889fe54bbfd1fb3357e8c0614d57a437a72f782a","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/footer.ejs","hash":"7f6b3f126a58e6734b658ab57bc6b41822bc9342","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/pagination.ejs","hash":"ca660c59aec56daa4a7b41715b97434d4a24c37e","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/scripts.ejs","hash":"6cffa3adb2f5b93a47f29549ac589c8bce8c223e","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/styles.ejs","hash":"e62b799d8ac369d1f1b36bd2649ecc34aec3384c","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_extend.styl","hash":"faca25132d55e8989d1c1d638e55d1e97de3c561","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_mixins.styl","hash":"c921ceb620deedddd38c9cec28190995e8764bab","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_util.styl","hash":"f8e286a21c7ec3e771d5ddeb2909ac92390af9bd","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_variables.styl","hash":"544dc6332579a43551b16c52d39e3ca0ff1e1194","modified":1510277757013},{"_id":"themes/cactus-dark/source/css/style.styl","hash":"839511bb983c2b8cd552451f919cde34badd7a56","modified":1510278062173},{"_id":"themes/cactus-dark/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1506955448000},{"_id":"themes/cactus-dark/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1506955448000},{"_id":"themes/cactus-dark/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1506955448000},{"_id":"themes/cactus-dark/source/images/logo.png","hash":"199750f3a39251ca97d36ed8317d88dfdc2dfe66","modified":1506955448000},{"_id":"themes/cactus-dark/source/js/main.js","hash":"2703a7cb4fc7056d13215b9fde675da426b9cdc4","modified":1506955448000},{"_id":"source/_posts/littlebook/docker/docker-learning-001.md","hash":"f4277eadb7d0d9841296990b4dd94481ea77eb12","modified":1510216135981},{"_id":"source/_posts/littlebook/docker/docker-learning-002.md","hash":"061247b82b431800cc99ddd5f81dfa9dbc2804ca","modified":1510216147151},{"_id":"source/_posts/littlebook/springboot/springboot-001.md","hash":"0c295daae03f01a57be5b2f37ca0fbded66498ca","modified":1510216208857},{"_id":"source/_posts/littlebook/springcloud/spring-cloud-001.md","hash":"4f3794b66aad7aeba04d5e720c1bdeb5ed6faf1d","modified":1510216227038},{"_id":"source/_posts/pie/durian/develop-tools.md","hash":"143d89ff847a69fa45a555aa8b9c835e76670968","modified":1510216328080},{"_id":"source/_posts/pie/durian/couchBase-tutorials.md","hash":"5826d0b1e8bf3dd0d94a8dfd7d8f5aa632d97b53","modified":1510216290191},{"_id":"source/_posts/pie/durian/hot-deploy-maven-project.md","hash":"27305139033072b5f7205f58e4aebcba834706d3","modified":1510222637874},{"_id":"source/_posts/pie/durian/java-jetty-server-in-junit.md","hash":"31e36c168a384db55df4084dc258fe9b8dd024ca","modified":1510216307267},{"_id":"themes/cactus-dark/.git/objects/pack/pack-72f1dd6fe1c37cfea3553d406d6561f9b27521a2.idx","hash":"0abdbe3a4bd44cda4a9378ec90371e37fba8af4c","modified":1506955448000},{"_id":"themes/cactus-dark/.git/refs/heads/master","hash":"b03dc4e9add397c00d450a9acf48e5bdf99bab0f","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/actions_mobile.ejs","hash":"64d0f85480997a4fa53c99954e9454c189595e9c","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/share.ejs","hash":"25a3406f97e976ec13239f0d3f32f9e512511f50","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/tag.ejs","hash":"bfab03ef986d35ccad583f2d2b575db4a8d2789e","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/actions_desktop.ejs","hash":"063ae931a6902f192e086fe5cceae587d27ed196","modified":1506955448000},{"_id":"themes/cactus-dark/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/kimbie.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/paraiso.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/archive.styl","hash":"18fa7f84a9783c5fb56c9f450ea93bd88408e682","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/article.styl","hash":"202b775a966d7bc35bf5adc693b62463dec106bb","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/comments.styl","hash":"11fb41241a13971d23fc3f7e6d60315c7f248396","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/footer.styl","hash":"b7570de60eaf9aa6b0192bf9c71b9172ff11bfbc","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/header.styl","hash":"63707d9103a283147ca222fd6f8ff9bffbffe427","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/index.styl","hash":"cf43702450ea1e5617541501886982a394cff8ec","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/pagination.styl","hash":"03a1b81d60dae3dd55963b7e74a6fee83470e6bb","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506955448000},{"_id":"themes/cactus-dark/.git/logs/refs/heads/master","hash":"9b6bc56960f8cdcd0d93a33ed17c1247b1f672ca","modified":1506955448000},{"_id":"themes/cactus-dark/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/post/actions_desktop.styl","hash":"2bbbb20ae8a99bc08fb95ba0ec8f39ed6ccb8534","modified":1506955448000},{"_id":"themes/cactus-dark/source/css/_partial/post/actions_mobile.styl","hash":"e6a802d7ee1023c5fc5fac18bb0ba3dc03ef2ac8","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1506955448000},{"_id":"themes/cactus-dark/.git/logs/refs/remotes/origin/HEAD","hash":"9b6bc56960f8cdcd0d93a33ed17c1247b1f672ca","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1506955448000},{"_id":"themes/cactus-dark/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1506955448000},{"_id":"themes/cactus-dark/source/images/theme overview.psd","hash":"8dc11d9d289c247423911e962c4eb3a556dc67d1","modified":1506955448000},{"_id":"themes/cactus-dark/.git/objects/pack/pack-72f1dd6fe1c37cfea3553d406d6561f9b27521a2.pack","hash":"b8ee1cc365aaa1a16573ec0830dd6f81b91783b5","modified":1506955448000},{"_id":"public/CNAME","hash":"c4176ce0409f9be9cea4d56c2229ff54ee1bd103","modified":1510278073048},{"_id":"public/about/index.html","hash":"1af3e43fdf447fe173d7c1d124051c90a7f90633","modified":1510278073405},{"_id":"public/pie/durian/develop-tools/index.html","hash":"de8392a7c232a4388925c13bec36b76cc16db3f8","modified":1510278073405},{"_id":"public/littlebook/docker/docker-learning-002/index.html","hash":"f714be56eecdb4947565a2d9160bb6ce3962ef1b","modified":1510278073405},{"_id":"public/archives/index.html","hash":"3ef9b1308e727f870ef790d6e2a199b34fa139f1","modified":1510278073405},{"_id":"public/archives/2015/index.html","hash":"4d6283bd9c9ff269d5acff9e4cb8a374cc6c66ca","modified":1510278073405},{"_id":"public/archives/2015/04/index.html","hash":"55d75bf6d6f7caab6052ae7530ba22c560609087","modified":1510278073405},{"_id":"public/archives/2015/07/index.html","hash":"db1036a2732418783b087f26f53bc84c3438f4d9","modified":1510278073405},{"_id":"public/archives/2017/index.html","hash":"f99ea8e75b5e7855f76a3ad87bfa777ced9fbd74","modified":1510278073405},{"_id":"public/archives/2017/10/index.html","hash":"90d6b60605d70183d9bf47af51b113c167e67dd4","modified":1510278073406},{"_id":"public/archives/2017/11/index.html","hash":"63a3f5152eca1912f8d2562c8abd16a48286efda","modified":1510278073406},{"_id":"public/categories/programming/index.html","hash":"3e7b6e9a9a3a758eef72b28ef66e25493dc45073","modified":1510278073406},{"_id":"public/categories/programming/test/index.html","hash":"2335de84a0b458a0833ee8350562c8027a04aa9d","modified":1510278073406},{"_id":"public/index.html","hash":"8fb9590e83d0d65b3eb89b2123e3ce27e325d4a8","modified":1510278073406},{"_id":"public/tags/programming/index.html","hash":"0e32cd67d932228c27805b504550c305094c3455","modified":1510278073406},{"_id":"public/tags/couchbase/index.html","hash":"d9669833029ce305f5e0dd3bde65243bce78121e","modified":1510278073406},{"_id":"public/tags/docker/index.html","hash":"52bc2968035c107d86780ecd6aeb91e6420730dd","modified":1510278073406},{"_id":"public/tags/springboot/index.html","hash":"87d01d48ff33771513507c59d03732ba086a79ed","modified":1510278073406},{"_id":"public/tags/littlebook/index.html","hash":"0999c7cbe7f5c41e5060b38fc0a742d01807ae1b","modified":1510278073406},{"_id":"public/tags/springcloud/index.html","hash":"678dc1bf7e9812fc97ffd152f1b6888d7c5eb0c3","modified":1510278073406},{"_id":"public/tags/tools/index.html","hash":"d5a6e69b064e911ba88717f8f1e21b8d49d1ccfc","modified":1510278073406},{"_id":"public/tags/maven/index.html","hash":"0155809e6c61e16ea867ecac0f49c9bfc48aa660","modified":1510278073406},{"_id":"public/tags/tomcat/index.html","hash":"42ca6a7789ec1da14cc15836c832cb84c105d881","modified":1510278073406},{"_id":"public/pie/durian/hot-deploy-maven-project/index.html","hash":"ad65421c35e326d6fc47f44b70c811874ebc59f4","modified":1510278073408},{"_id":"public/littlebook/springcloud/spring-cloud-001/index.html","hash":"dbb9f663a1a40f712eae2fc3d3a68d63c93799a3","modified":1510278073408},{"_id":"public/littlebook/springboot/springboot-001/index.html","hash":"d32fbb3feb90db4af3f95bc8c0c9ae130a0b56a2","modified":1510278073408},{"_id":"public/littlebook/docker/docker-learning-001/index.html","hash":"41833aff9f3109abc63534dcad49b0c9a953104a","modified":1510278073408},{"_id":"public/durian/couchBase-tutorials/index.html","hash":"7f34f90ab68b03fb07c3efce38ae9e045503c2e9","modified":1510278073408},{"_id":"public/pie/durian/couchBase-tutorials/index.html","hash":"e4e1883bb9702f8dfb4465193fcbd43a59eeec52","modified":1510278073408},{"_id":"public/pie/durian/java-jetty-server-in-junit/index.html","hash":"e3e51ec113f8595e5c3812e76b8a0062a7350756","modified":1510278073408},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1510278073425},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1510278073426},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1510278073426},{"_id":"public/images/logo.png","hash":"199750f3a39251ca97d36ed8317d88dfdc2dfe66","modified":1510278073426},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1510278073871},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1510278073874},{"_id":"public/js/main.js","hash":"2703a7cb4fc7056d13215b9fde675da426b9cdc4","modified":1510278073879},{"_id":"public/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1510278073879},{"_id":"public/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1510278073879},{"_id":"public/css/style.css","hash":"3e726cc00d3f5c0c79d7249a92cccef05f2ee802","modified":1510278073879},{"_id":"public/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1510278073879},{"_id":"public/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1510278073879},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1510278073879},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1510278073879},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1510278073879},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1510278073879},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1510278073879},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1510278073899},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1510278073918},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1510278073918},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1510278073918},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1510278073919},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1510278073920},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1510278073926},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1510278073926},{"_id":"public/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1510278073927},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1510278073927},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1510278073928},{"_id":"public/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1510278073929},{"_id":"public/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1510278073929},{"_id":"public/images/theme overview.psd","hash":"8dc11d9d289c247423911e962c4eb3a556dc67d1","modified":1510278073958}],"Category":[{"name":"programming","_id":"cj9t8kisp000346tb21q0lk9l"},{"name":"test","parent":"cj9t8kisp000346tb21q0lk9l","_id":"cj9t8kiud000r46tbb1heufjc"}],"Data":[{"_id":"projects","data":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}],"Page":[{"title":"about","date":"2017-10-02T15:04:10.000Z","_content":"\nHi! Congrats! 🎉 You found me!\n\nThis is Shuai, a software engineer, live in ~~[Nanjing]~~ [Qingdao], China.\n\nFree to contact me with [email].\n\n[Nanjing]: https://en.wikipedia.org/wiki/Nanjing\n[Qingdao]: https://en.wikipedia.org/wiki/Qingdao\n[Weifang]: https://en.wikipedia.org/wiki/Weifang\n[Shandong]: https://en.wikipedia.org/wiki/Shandong\n[Jiangnan University]: https://en.wikipedia.org/wiki/Jiangnan_University\n[email]:mailto:edwin.s.zhang@gmail.com\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-10-02 23:04:10\n---\n\nHi! Congrats! 🎉 You found me!\n\nThis is Shuai, a software engineer, live in ~~[Nanjing]~~ [Qingdao], China.\n\nFree to contact me with [email].\n\n[Nanjing]: https://en.wikipedia.org/wiki/Nanjing\n[Qingdao]: https://en.wikipedia.org/wiki/Qingdao\n[Weifang]: https://en.wikipedia.org/wiki/Weifang\n[Shandong]: https://en.wikipedia.org/wiki/Shandong\n[Jiangnan University]: https://en.wikipedia.org/wiki/Jiangnan_University\n[email]:mailto:edwin.s.zhang@gmail.com\n","updated":"2017-11-09T09:30:05.252Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj9t8kir8000146tblhy04u3y","content":"<p>Hi! Congrats! 🎉 You found me!</p>\n<p>This is Shuai, a software engineer, live in <del><a href=\"https://en.wikipedia.org/wiki/Nanjing\" target=\"_blank\" rel=\"external\">Nanjing</a></del> <a href=\"https://en.wikipedia.org/wiki/Qingdao\" target=\"_blank\" rel=\"external\">Qingdao</a>, China.</p>\n<p>Free to contact me with <a href=\"mailto:edwin.s.zhang@gmail.com\" target=\"_blank\" rel=\"external\">email</a>.</p>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<p>Hi! Congrats! 🎉 You found me!</p>\n<p>This is Shuai, a software engineer, live in <del><a href=\"https://en.wikipedia.org/wiki/Nanjing\" target=\"_blank\" rel=\"external\">Nanjing</a></del> <a href=\"https://en.wikipedia.org/wiki/Qingdao\" target=\"_blank\" rel=\"external\">Qingdao</a>, China.</p>\n<p>Free to contact me with <a href=\"mailto:edwin.s.zhang@gmail.com\" target=\"_blank\" rel=\"external\">email</a>.</p>\n"}],"Post":[{"title":"没事找事做 - Hack周边的 wifi","_content":"> 声明： 本文档仅用于学习使用。用于非法途径与本人无关。\n\n## 前提\n- *nix系统\n- 安装 xcode\n\n## 安装工具\n安装我们破解所需的工具，等待时间较长。[官方网站]\n> brew install aircrack-ng\n添加别名\n> sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport\n\n\n[官方网站]:http://www.aircrack-ng.org\n","source":"_drafts/hack-your-neighbors-wifi.md","raw":"---\ntitle: 没事找事做 - Hack周边的 wifi\ntags:\n---\n> 声明： 本文档仅用于学习使用。用于非法途径与本人无关。\n\n## 前提\n- *nix系统\n- 安装 xcode\n\n## 安装工具\n安装我们破解所需的工具，等待时间较长。[官方网站]\n> brew install aircrack-ng\n添加别名\n> sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport\n\n\n[官方网站]:http://www.aircrack-ng.org\n","slug":"hack-your-neighbors-wifi","published":0,"date":"2017-10-08T14:01:51.000Z","updated":"2017-10-08T14:28:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kir3000046tb8j37y9rg","content":"<blockquote>\n<p>声明： 本文档仅用于学习使用。用于非法途径与本人无关。</p>\n</blockquote>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><ul>\n<li>*nix系统</li>\n<li>安装 xcode</li>\n</ul>\n<h2 id=\"安装工具\"><a href=\"#安装工具\" class=\"headerlink\" title=\"安装工具\"></a>安装工具</h2><p>安装我们破解所需的工具，等待时间较长。<a href=\"http://www.aircrack-ng.org\" target=\"_blank\" rel=\"external\">官方网站</a></p>\n<blockquote>\n<p>brew install aircrack-ng<br>添加别名<br>sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport</p>\n</blockquote>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<blockquote>\n<p>声明： 本文档仅用于学习使用。用于非法途径与本人无关。</p>\n</blockquote>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><ul>\n<li>*nix系统</li>\n<li>安装 xcode</li>\n</ul>\n<h2 id=\"安装工具\"><a href=\"#安装工具\" class=\"headerlink\" title=\"安装工具\"></a>安装工具</h2><p>安装我们破解所需的工具，等待时间较长。<a href=\"http://www.aircrack-ng.org\" target=\"_blank\" rel=\"external\">官方网站</a></p>\n<blockquote>\n<p>brew install aircrack-ng<br>添加别名<br>sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport</p>\n</blockquote>\n"},{"title":"CouchBase的使用01","date":"2015-07-22T02:38:10.000Z","cover":"https://ironcorelabs.com/davenport/img/davenport-logo.png","_content":"\n## Preface\n本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。\n[CouchBase官网相关文档](http://docs.couchbase.com/)\n主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法\n<br>\n## Introduction\n对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。\n\n> CouchBase = CouchDB + Membase\n\nCouchDB -> 是一个开源的面向文档的数据库管理系统。\n\n> 1. CouchDB是分布式的数据库\n> 2. CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构\n> 3. 支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句\n\nMembase -> 是一个基于key/value的NoSQL开源项目。\n\n> 1. 持久化，自动将在线数据迁移到低延迟的存储介质的技术\n> 2. 多线程低锁争用\n> 3. 动态再平衡现有集群\n> 4. 支持快速失败转移来提供系统的高可用性\n\nCouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。\n传送门: [Couchbase介绍，更好的Cache系统](http://zhang.hu/couchbase/)\n\n## Installation\n[Supported platforms](http://docs.couchbase.com/admin/admin/Install/install-platforms.html)\nWindows:\n\n> + 官方下载安装包，不赘述。\n> + 注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。\n> + 由于比较占内存，建议CouchBase服务设为手动启动\n\nLunix:\n\n> + Red Hat/CentOS & Ubuntu/Debian\n\nMac OS X:\n\n> + 土豪，交个朋友吧\n> ![交个朋友吧](http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png)\n> !!! 2015年11月更新, 穷屌丝有Mac了...\n\n## Management\n\n> + Couchbase Web Console\n> + Command-line Interface (CLI)\n> + REST API\n> + Client\n\n## Architecture & Concepts\n\nCluster Manager\n\n> 可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。\n> 主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能\n> • Cluster management\n> • Node administration\n> • Node monitoring\n> • Statistics gathering and aggregation\n> • Run-time logging\n> • Multi-tenancy\n> • Security for administrative and client access\n> • Client proxy service to redirect requests\n\nNodes(or Couchbase Server)\n> 一个CouchBase Server的实例，部署在PC，VM或者云端\n>  Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口\n> 官网上对于Node与Cluster Manager的关系是这样描述的\n> `Every node within a Couchbase cluster includes the Cluster Manager component`\n\nCluster\n> 集群简单理解就是一群Node(≥1)\n> 一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分\n> 这使得每个Node都可以对整个cluster做管理，分析之类的操作\n> Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性\n> 而用户的数据在每个Node中又是以一个个vBucket存储的\n\nvBuckets\n> vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间\n> vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效\n> vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件\n> vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面\n> Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置\n> Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，[详解](http://zhang.hu/couchbase/)\n> ![vBuckets示意图](http://docs.couchbase.com/admin/admin/images/vbuckets.png)\n> 盗图于[vBuckets官方文档](http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html)\n\nRack Awareness\n> 翻译为机架感知，主要负责负载均衡，是企业版收费功能\n> 数据备份的管理和单点失效处理\n\n## Summary\n1. 数据动态分散\n2. 单点失效处理，不会造成数据404\n3. 良好的扩展弹性\n","source":"_posts/durian/couchBase-tutorials.md","raw":"---\ntitle:  \"CouchBase的使用01\"\ndate: 2015-07-22 10:38:10\ncategories: [programming]\ntags: [programming, couchbase]\ncover: 'https://ironcorelabs.com/davenport/img/davenport-logo.png'\n---\n\n## Preface\n本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。\n[CouchBase官网相关文档](http://docs.couchbase.com/)\n主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法\n<br>\n## Introduction\n对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。\n\n> CouchBase = CouchDB + Membase\n\nCouchDB -> 是一个开源的面向文档的数据库管理系统。\n\n> 1. CouchDB是分布式的数据库\n> 2. CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构\n> 3. 支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句\n\nMembase -> 是一个基于key/value的NoSQL开源项目。\n\n> 1. 持久化，自动将在线数据迁移到低延迟的存储介质的技术\n> 2. 多线程低锁争用\n> 3. 动态再平衡现有集群\n> 4. 支持快速失败转移来提供系统的高可用性\n\nCouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。\n传送门: [Couchbase介绍，更好的Cache系统](http://zhang.hu/couchbase/)\n\n## Installation\n[Supported platforms](http://docs.couchbase.com/admin/admin/Install/install-platforms.html)\nWindows:\n\n> + 官方下载安装包，不赘述。\n> + 注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。\n> + 由于比较占内存，建议CouchBase服务设为手动启动\n\nLunix:\n\n> + Red Hat/CentOS & Ubuntu/Debian\n\nMac OS X:\n\n> + 土豪，交个朋友吧\n> ![交个朋友吧](http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png)\n> !!! 2015年11月更新, 穷屌丝有Mac了...\n\n## Management\n\n> + Couchbase Web Console\n> + Command-line Interface (CLI)\n> + REST API\n> + Client\n\n## Architecture & Concepts\n\nCluster Manager\n\n> 可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。\n> 主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能\n> • Cluster management\n> • Node administration\n> • Node monitoring\n> • Statistics gathering and aggregation\n> • Run-time logging\n> • Multi-tenancy\n> • Security for administrative and client access\n> • Client proxy service to redirect requests\n\nNodes(or Couchbase Server)\n> 一个CouchBase Server的实例，部署在PC，VM或者云端\n>  Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口\n> 官网上对于Node与Cluster Manager的关系是这样描述的\n> `Every node within a Couchbase cluster includes the Cluster Manager component`\n\nCluster\n> 集群简单理解就是一群Node(≥1)\n> 一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分\n> 这使得每个Node都可以对整个cluster做管理，分析之类的操作\n> Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性\n> 而用户的数据在每个Node中又是以一个个vBucket存储的\n\nvBuckets\n> vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间\n> vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效\n> vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件\n> vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面\n> Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置\n> Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，[详解](http://zhang.hu/couchbase/)\n> ![vBuckets示意图](http://docs.couchbase.com/admin/admin/images/vbuckets.png)\n> 盗图于[vBuckets官方文档](http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html)\n\nRack Awareness\n> 翻译为机架感知，主要负责负载均衡，是企业版收费功能\n> 数据备份的管理和单点失效处理\n\n## Summary\n1. 数据动态分散\n2. 单点失效处理，不会造成数据404\n3. 良好的扩展弹性\n","slug":"durian/couchBase-tutorials","published":1,"updated":"2017-11-09T08:31:09.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kisl000246tbghi5kxpg","content":"<h2 id=\"Preface\"><a href=\"#Preface\" class=\"headerlink\" title=\"Preface\"></a>Preface</h2><p>本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。<br><a href=\"http://docs.couchbase.com/\" target=\"_blank\" rel=\"external\">CouchBase官网相关文档</a><br>主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法<br><br></p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。</p>\n<blockquote>\n<p>CouchBase = CouchDB + Membase</p>\n</blockquote>\n<p>CouchDB -&gt; 是一个开源的面向文档的数据库管理系统。</p>\n<blockquote>\n<ol>\n<li>CouchDB是分布式的数据库</li>\n<li>CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构</li>\n<li>支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句</li>\n</ol>\n</blockquote>\n<p>Membase -&gt; 是一个基于key/value的NoSQL开源项目。</p>\n<blockquote>\n<ol>\n<li>持久化，自动将在线数据迁移到低延迟的存储介质的技术</li>\n<li>多线程低锁争用</li>\n<li>动态再平衡现有集群</li>\n<li>支持快速失败转移来提供系统的高可用性</li>\n</ol>\n</blockquote>\n<p>CouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。<br>传送门: <a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">Couchbase介绍，更好的Cache系统</a></p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p><a href=\"http://docs.couchbase.com/admin/admin/Install/install-platforms.html\" target=\"_blank\" rel=\"external\">Supported platforms</a><br>Windows:</p>\n<blockquote>\n<ul>\n<li>官方下载安装包，不赘述。</li>\n<li>注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。</li>\n<li>由于比较占内存，建议CouchBase服务设为手动启动</li>\n</ul>\n</blockquote>\n<p>Lunix:</p>\n<blockquote>\n<ul>\n<li>Red Hat/CentOS &amp; Ubuntu/Debian</li>\n</ul>\n</blockquote>\n<p>Mac OS X:</p>\n<blockquote>\n<ul>\n<li>土豪，交个朋友吧<br><img src=\"http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png\" alt=\"交个朋友吧\"><br>!!! 2015年11月更新, 穷屌丝有Mac了…</li>\n</ul>\n</blockquote>\n<h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><blockquote>\n<ul>\n<li>Couchbase Web Console</li>\n<li>Command-line Interface (CLI)</li>\n<li>REST API</li>\n<li>Client</li>\n</ul>\n</blockquote>\n<h2 id=\"Architecture-amp-Concepts\"><a href=\"#Architecture-amp-Concepts\" class=\"headerlink\" title=\"Architecture &amp; Concepts\"></a>Architecture &amp; Concepts</h2><p>Cluster Manager</p>\n<blockquote>\n<p>可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。<br>主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能<br>• Cluster management<br>• Node administration<br>• Node monitoring<br>• Statistics gathering and aggregation<br>• Run-time logging<br>• Multi-tenancy<br>• Security for administrative and client access<br>• Client proxy service to redirect requests</p>\n</blockquote>\n<p>Nodes(or Couchbase Server)</p>\n<blockquote>\n<p>一个CouchBase Server的实例，部署在PC，VM或者云端<br> Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口<br>官网上对于Node与Cluster Manager的关系是这样描述的<br><code>Every node within a Couchbase cluster includes the Cluster Manager component</code></p>\n</blockquote>\n<p>Cluster</p>\n<blockquote>\n<p>集群简单理解就是一群Node(≥1)<br>一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分<br>这使得每个Node都可以对整个cluster做管理，分析之类的操作<br>Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性<br>而用户的数据在每个Node中又是以一个个vBucket存储的</p>\n</blockquote>\n<p>vBuckets</p>\n<blockquote>\n<p>vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间<br>vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效<br>vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件<br>vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面<br>Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置<br>Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，<a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">详解</a><br><img src=\"http://docs.couchbase.com/admin/admin/images/vbuckets.png\" alt=\"vBuckets示意图\"><br>盗图于<a href=\"http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html\" target=\"_blank\" rel=\"external\">vBuckets官方文档</a></p>\n</blockquote>\n<p>Rack Awareness</p>\n<blockquote>\n<p>翻译为机架感知，主要负责负载均衡，是企业版收费功能<br>数据备份的管理和单点失效处理</p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><ol>\n<li>数据动态分散</li>\n<li>单点失效处理，不会造成数据404</li>\n<li>良好的扩展弹性</li>\n</ol>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"Preface\"><a href=\"#Preface\" class=\"headerlink\" title=\"Preface\"></a>Preface</h2><p>本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。<br><a href=\"http://docs.couchbase.com/\" target=\"_blank\" rel=\"external\">CouchBase官网相关文档</a><br>主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法<br><br></p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。</p>\n<blockquote>\n<p>CouchBase = CouchDB + Membase</p>\n</blockquote>\n<p>CouchDB -&gt; 是一个开源的面向文档的数据库管理系统。</p>\n<blockquote>\n<ol>\n<li>CouchDB是分布式的数据库</li>\n<li>CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构</li>\n<li>支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句</li>\n</ol>\n</blockquote>\n<p>Membase -&gt; 是一个基于key/value的NoSQL开源项目。</p>\n<blockquote>\n<ol>\n<li>持久化，自动将在线数据迁移到低延迟的存储介质的技术</li>\n<li>多线程低锁争用</li>\n<li>动态再平衡现有集群</li>\n<li>支持快速失败转移来提供系统的高可用性</li>\n</ol>\n</blockquote>\n<p>CouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。<br>传送门: <a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">Couchbase介绍，更好的Cache系统</a></p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p><a href=\"http://docs.couchbase.com/admin/admin/Install/install-platforms.html\" target=\"_blank\" rel=\"external\">Supported platforms</a><br>Windows:</p>\n<blockquote>\n<ul>\n<li>官方下载安装包，不赘述。</li>\n<li>注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。</li>\n<li>由于比较占内存，建议CouchBase服务设为手动启动</li>\n</ul>\n</blockquote>\n<p>Lunix:</p>\n<blockquote>\n<ul>\n<li>Red Hat/CentOS &amp; Ubuntu/Debian</li>\n</ul>\n</blockquote>\n<p>Mac OS X:</p>\n<blockquote>\n<ul>\n<li>土豪，交个朋友吧<br><img src=\"http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png\" alt=\"交个朋友吧\"><br>!!! 2015年11月更新, 穷屌丝有Mac了…</li>\n</ul>\n</blockquote>\n<h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><blockquote>\n<ul>\n<li>Couchbase Web Console</li>\n<li>Command-line Interface (CLI)</li>\n<li>REST API</li>\n<li>Client</li>\n</ul>\n</blockquote>\n<h2 id=\"Architecture-amp-Concepts\"><a href=\"#Architecture-amp-Concepts\" class=\"headerlink\" title=\"Architecture &amp; Concepts\"></a>Architecture &amp; Concepts</h2><p>Cluster Manager</p>\n<blockquote>\n<p>可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。<br>主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能<br>• Cluster management<br>• Node administration<br>• Node monitoring<br>• Statistics gathering and aggregation<br>• Run-time logging<br>• Multi-tenancy<br>• Security for administrative and client access<br>• Client proxy service to redirect requests</p>\n</blockquote>\n<p>Nodes(or Couchbase Server)</p>\n<blockquote>\n<p>一个CouchBase Server的实例，部署在PC，VM或者云端<br> Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口<br>官网上对于Node与Cluster Manager的关系是这样描述的<br><code>Every node within a Couchbase cluster includes the Cluster Manager component</code></p>\n</blockquote>\n<p>Cluster</p>\n<blockquote>\n<p>集群简单理解就是一群Node(≥1)<br>一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分<br>这使得每个Node都可以对整个cluster做管理，分析之类的操作<br>Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性<br>而用户的数据在每个Node中又是以一个个vBucket存储的</p>\n</blockquote>\n<p>vBuckets</p>\n<blockquote>\n<p>vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间<br>vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效<br>vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件<br>vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面<br>Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置<br>Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，<a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">详解</a><br><img src=\"http://docs.couchbase.com/admin/admin/images/vbuckets.png\" alt=\"vBuckets示意图\"><br>盗图于<a href=\"http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html\" target=\"_blank\" rel=\"external\">vBuckets官方文档</a></p>\n</blockquote>\n<p>Rack Awareness</p>\n<blockquote>\n<p>翻译为机架感知，主要负责负载均衡，是企业版收费功能<br>数据备份的管理和单点失效处理</p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><ol>\n<li>数据动态分散</li>\n<li>单点失效处理，不会造成数据404</li>\n<li>良好的扩展弹性</li>\n</ol>\n"},{"title":"Docker 学习笔记（一）","date":"2017-10-03T02:12:10.000Z","_content":"\n\n## Concepts\n\n### Image\n`Image` 是轻量级的集合，包含了自定义的配置文件、依赖库、环境变量等。\n\n### Container\n`Container` 是 `Image` 的运行状态。独立存在于内存中，与宿主机器隔离，只通过 _port_ 进行通信。一个 `Image` 可以运行产生多个 `Container`, 每个都具有独立的内存与进程。你可以使用 `docker ps` 查看进程。\n\n## Container vs. Virtual Machine\n\n### VM Diagram\n![VM Diagram](https://www.docker.com/sites/default/files/VM%402x.png)\n\n### Container diagram\n![Container diagram](https://www.docker.com/sites/default/files/Container%402x.png)\n\n## Hello world\n测试 docker 环境\n\n```\n$ docker run hello-world\n```\n\n国内会报错 timeout。可以参考 [这篇文章](https://my.oschina.net/nevermissing/blog/760954)更新镜像源。\n国内可使用的镜像源：\n- [docker 中国官方镜像加速](https://www.docker-cn.com/registry-mirror)\n","source":"_posts/littlebook/docker/docker-learning-001.md","raw":"---\ntitle: Docker 学习笔记（一）\ntags: [programming, docker]\ndate: 2017-10-03 10:12:10\n---\n\n\n## Concepts\n\n### Image\n`Image` 是轻量级的集合，包含了自定义的配置文件、依赖库、环境变量等。\n\n### Container\n`Container` 是 `Image` 的运行状态。独立存在于内存中，与宿主机器隔离，只通过 _port_ 进行通信。一个 `Image` 可以运行产生多个 `Container`, 每个都具有独立的内存与进程。你可以使用 `docker ps` 查看进程。\n\n## Container vs. Virtual Machine\n\n### VM Diagram\n![VM Diagram](https://www.docker.com/sites/default/files/VM%402x.png)\n\n### Container diagram\n![Container diagram](https://www.docker.com/sites/default/files/Container%402x.png)\n\n## Hello world\n测试 docker 环境\n\n```\n$ docker run hello-world\n```\n\n国内会报错 timeout。可以参考 [这篇文章](https://my.oschina.net/nevermissing/blog/760954)更新镜像源。\n国内可使用的镜像源：\n- [docker 中国官方镜像加速](https://www.docker-cn.com/registry-mirror)\n","slug":"littlebook/docker/docker-learning-001","published":1,"updated":"2017-11-09T08:28:55.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kitf000946tb8sze152b","content":"<h2 id=\"Concepts\"><a href=\"#Concepts\" class=\"headerlink\" title=\"Concepts\"></a>Concepts</h2><h3 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h3><p><code>Image</code> 是轻量级的集合，包含了自定义的配置文件、依赖库、环境变量等。</p>\n<h3 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a>Container</h3><p><code>Container</code> 是 <code>Image</code> 的运行状态。独立存在于内存中，与宿主机器隔离，只通过 <em>port</em> 进行通信。一个 <code>Image</code> 可以运行产生多个 <code>Container</code>, 每个都具有独立的内存与进程。你可以使用 <code>docker ps</code> 查看进程。</p>\n<h2 id=\"Container-vs-Virtual-Machine\"><a href=\"#Container-vs-Virtual-Machine\" class=\"headerlink\" title=\"Container vs. Virtual Machine\"></a>Container vs. Virtual Machine</h2><h3 id=\"VM-Diagram\"><a href=\"#VM-Diagram\" class=\"headerlink\" title=\"VM Diagram\"></a>VM Diagram</h3><p><img src=\"https://www.docker.com/sites/default/files/VM%402x.png\" alt=\"VM Diagram\"></p>\n<h3 id=\"Container-diagram\"><a href=\"#Container-diagram\" class=\"headerlink\" title=\"Container diagram\"></a>Container diagram</h3><p><img src=\"https://www.docker.com/sites/default/files/Container%402x.png\" alt=\"Container diagram\"></p>\n<h2 id=\"Hello-world\"><a href=\"#Hello-world\" class=\"headerlink\" title=\"Hello world\"></a>Hello world</h2><p>测试 docker 环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker run hello-world</div></pre></td></tr></table></figure>\n<p>国内会报错 timeout。可以参考 <a href=\"https://my.oschina.net/nevermissing/blog/760954\" target=\"_blank\" rel=\"external\">这篇文章</a>更新镜像源。<br>国内可使用的镜像源：</p>\n<ul>\n<li><a href=\"https://www.docker-cn.com/registry-mirror\" target=\"_blank\" rel=\"external\">docker 中国官方镜像加速</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"Concepts\"><a href=\"#Concepts\" class=\"headerlink\" title=\"Concepts\"></a>Concepts</h2><h3 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h3><p><code>Image</code> 是轻量级的集合，包含了自定义的配置文件、依赖库、环境变量等。</p>\n<h3 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a>Container</h3><p><code>Container</code> 是 <code>Image</code> 的运行状态。独立存在于内存中，与宿主机器隔离，只通过 <em>port</em> 进行通信。一个 <code>Image</code> 可以运行产生多个 <code>Container</code>, 每个都具有独立的内存与进程。你可以使用 <code>docker ps</code> 查看进程。</p>\n<h2 id=\"Container-vs-Virtual-Machine\"><a href=\"#Container-vs-Virtual-Machine\" class=\"headerlink\" title=\"Container vs. Virtual Machine\"></a>Container vs. Virtual Machine</h2><h3 id=\"VM-Diagram\"><a href=\"#VM-Diagram\" class=\"headerlink\" title=\"VM Diagram\"></a>VM Diagram</h3><p><img src=\"https://www.docker.com/sites/default/files/VM%402x.png\" alt=\"VM Diagram\"></p>\n<h3 id=\"Container-diagram\"><a href=\"#Container-diagram\" class=\"headerlink\" title=\"Container diagram\"></a>Container diagram</h3><p><img src=\"https://www.docker.com/sites/default/files/Container%402x.png\" alt=\"Container diagram\"></p>\n<h2 id=\"Hello-world\"><a href=\"#Hello-world\" class=\"headerlink\" title=\"Hello world\"></a>Hello world</h2><p>测试 docker 环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ docker run hello-world</div></pre></td></tr></table></figure>\n<p>国内会报错 timeout。可以参考 <a href=\"https://my.oschina.net/nevermissing/blog/760954\" target=\"_blank\" rel=\"external\">这篇文章</a>更新镜像源。<br>国内可使用的镜像源：</p>\n<ul>\n<li><a href=\"https://www.docker-cn.com/registry-mirror\" target=\"_blank\" rel=\"external\">docker 中国官方镜像加速</a></li>\n</ul>\n"},{"title":"Docker 学习笔记（二）- Container","date":"2017-10-03T14:29:33.000Z","_content":"\n## Dockerfile\n","source":"_posts/littlebook/docker/docker-learning-002.md","raw":"---\ntitle: Docker 学习笔记（二）- Container\ndate: 2017-10-03 22:29:33\ntags: [programming, docker]\n---\n\n## Dockerfile\n","slug":"littlebook/docker/docker-learning-002","published":1,"updated":"2017-11-09T08:29:07.151Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kiti000a46tbn2sbxk9f","content":"<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2>","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2>"},{"title":"[Little Book] Spring Boot 手记 001","date":"2017-10-17T15:21:09.000Z","_content":"\n## 官方文档\n[Spring boot reference](https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/)\n\n## 简化代码\n使用 Spring boot 的终极目标就是简化繁杂的配置，使开发最简化。所以，我们需要以下几个东西。\n- [Lombok](https://projectlombok.org/)\n- Java 8 语法糖\n- Spring Data & Spring Data REST\n- RxJava(TODO)\n- ...\n\n## 使用参数\n1 实现 ApplicationRunner 接口\n2 重写run方法，处理参数列表\n\n实例如下：\n\n```java\n@Slf4j\n@SpringBootApplication\npublic class Application implements ApplicationRunner{\n\n    public static void  main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n    @Override\n    public void run(ApplicationArguments args) throws Exception {\n        log.info(\"Application started with command-line arguments: {}\", Arrays.toString(args.getSourceArgs()));\n        log.info(\"NonOptionArgs: {}\", args.getNonOptionArgs());\n        log.info(\"OptionNames: {}\", args.getOptionNames());\n\n        for (String name : args.getOptionNames()){\n            log.info(\"arg-\" + name + \"=\" + args.getOptionValues(name));\n        }\n    }\n}\n```\n\n## 数据库加密密码\n### jasypt-spring-boot\n详细请参考: https://github.com/ulisesbocchio/jasypt-spring-boot\n1 POM 中引用 jasypt-spring-boot\n2 在 application.yml 中配置 config，可以配置从环境变量中读取加密盐\n  > jasypt:\n    encryptor:\n      algorithm: PBEWithMD5AndDES\n      password: ${PWD_SALT_ENV} # from environment\n\n3 设置 password: ENC(加密后的密文)\n\n## Profile\n1 在 resources 目录下新建 application-${profile}.yml\n2 java -Dspring.profiles.active=${profile} -jar yourSpringBootJar.jar\n\n## 测试\n...\n","source":"_posts/littlebook/springboot/springboot-001.md","raw":"---\ntitle: \"[Little Book] Spring Boot 手记 001\"\ndate: 2017-10-17 23:21:09\ntags: [programming, springboot, littlebook]\n---\n\n## 官方文档\n[Spring boot reference](https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/)\n\n## 简化代码\n使用 Spring boot 的终极目标就是简化繁杂的配置，使开发最简化。所以，我们需要以下几个东西。\n- [Lombok](https://projectlombok.org/)\n- Java 8 语法糖\n- Spring Data & Spring Data REST\n- RxJava(TODO)\n- ...\n\n## 使用参数\n1 实现 ApplicationRunner 接口\n2 重写run方法，处理参数列表\n\n实例如下：\n\n```java\n@Slf4j\n@SpringBootApplication\npublic class Application implements ApplicationRunner{\n\n    public static void  main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n    @Override\n    public void run(ApplicationArguments args) throws Exception {\n        log.info(\"Application started with command-line arguments: {}\", Arrays.toString(args.getSourceArgs()));\n        log.info(\"NonOptionArgs: {}\", args.getNonOptionArgs());\n        log.info(\"OptionNames: {}\", args.getOptionNames());\n\n        for (String name : args.getOptionNames()){\n            log.info(\"arg-\" + name + \"=\" + args.getOptionValues(name));\n        }\n    }\n}\n```\n\n## 数据库加密密码\n### jasypt-spring-boot\n详细请参考: https://github.com/ulisesbocchio/jasypt-spring-boot\n1 POM 中引用 jasypt-spring-boot\n2 在 application.yml 中配置 config，可以配置从环境变量中读取加密盐\n  > jasypt:\n    encryptor:\n      algorithm: PBEWithMD5AndDES\n      password: ${PWD_SALT_ENV} # from environment\n\n3 设置 password: ENC(加密后的密文)\n\n## Profile\n1 在 resources 目录下新建 application-${profile}.yml\n2 java -Dspring.profiles.active=${profile} -jar yourSpringBootJar.jar\n\n## 测试\n...\n","slug":"littlebook/springboot/springboot-001","published":1,"updated":"2017-11-09T08:30:08.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kitl000c46tb58bw6j8q","content":"<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><p><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/\" target=\"_blank\" rel=\"external\">Spring boot reference</a></p>\n<h2 id=\"简化代码\"><a href=\"#简化代码\" class=\"headerlink\" title=\"简化代码\"></a>简化代码</h2><p>使用 Spring boot 的终极目标就是简化繁杂的配置，使开发最简化。所以，我们需要以下几个东西。</p>\n<ul>\n<li><a href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"external\">Lombok</a></li>\n<li>Java 8 语法糖</li>\n<li>Spring Data &amp; Spring Data REST</li>\n<li>RxJava(TODO)</li>\n<li>…</li>\n</ul>\n<h2 id=\"使用参数\"><a href=\"#使用参数\" class=\"headerlink\" title=\"使用参数\"></a>使用参数</h2><p>1 实现 ApplicationRunner 接口<br>2 重写run方法，处理参数列表</p>\n<p>实例如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Slf</span>4j</div><div class=\"line\"><span class=\"meta\">@SpringBootApplication</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationRunner</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span>  <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        SpringApplication.run(Application.class, args);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">(ApplicationArguments args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        log.info(<span class=\"string\">\"Application started with command-line arguments: &#123;&#125;\"</span>, Arrays.toString(args.getSourceArgs()));</div><div class=\"line\">        log.info(<span class=\"string\">\"NonOptionArgs: &#123;&#125;\"</span>, args.getNonOptionArgs());</div><div class=\"line\">        log.info(<span class=\"string\">\"OptionNames: &#123;&#125;\"</span>, args.getOptionNames());</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> (String name : args.getOptionNames())&#123;</div><div class=\"line\">            log.info(<span class=\"string\">\"arg-\"</span> + name + <span class=\"string\">\"=\"</span> + args.getOptionValues(name));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密密码\"><a href=\"#数据库加密密码\" class=\"headerlink\" title=\"数据库加密密码\"></a>数据库加密密码</h2><h3 id=\"jasypt-spring-boot\"><a href=\"#jasypt-spring-boot\" class=\"headerlink\" title=\"jasypt-spring-boot\"></a>jasypt-spring-boot</h3><p>详细请参考: <a href=\"https://github.com/ulisesbocchio/jasypt-spring-boot\" target=\"_blank\" rel=\"external\">https://github.com/ulisesbocchio/jasypt-spring-boot</a><br>1 POM 中引用 jasypt-spring-boot<br>2 在 application.yml 中配置 config，可以配置从环境变量中读取加密盐</p>\n<blockquote>\n<p>jasypt:<br>    encryptor:<br>      algorithm: PBEWithMD5AndDES<br>      password: ${PWD_SALT_ENV} # from environment</p>\n</blockquote>\n<p>3 设置 password: ENC(加密后的密文)</p>\n<h2 id=\"Profile\"><a href=\"#Profile\" class=\"headerlink\" title=\"Profile\"></a>Profile</h2><p>1 在 resources 目录下新建 application-${profile}.yml<br>2 java -Dspring.profiles.active=${profile} -jar yourSpringBootJar.jar</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>…</p>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><p><a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/\" target=\"_blank\" rel=\"external\">Spring boot reference</a></p>\n<h2 id=\"简化代码\"><a href=\"#简化代码\" class=\"headerlink\" title=\"简化代码\"></a>简化代码</h2><p>使用 Spring boot 的终极目标就是简化繁杂的配置，使开发最简化。所以，我们需要以下几个东西。</p>\n<ul>\n<li><a href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"external\">Lombok</a></li>\n<li>Java 8 语法糖</li>\n<li>Spring Data &amp; Spring Data REST</li>\n<li>RxJava(TODO)</li>\n<li>…</li>\n</ul>\n<h2 id=\"使用参数\"><a href=\"#使用参数\" class=\"headerlink\" title=\"使用参数\"></a>使用参数</h2><p>1 实现 ApplicationRunner 接口<br>2 重写run方法，处理参数列表</p>\n<p>实例如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Slf</span>4j</div><div class=\"line\"><span class=\"meta\">@SpringBootApplication</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> <span class=\"keyword\">implements</span> <span class=\"title\">ApplicationRunner</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span>  <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        SpringApplication.run(Application.class, args);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">(ApplicationArguments args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        log.info(<span class=\"string\">\"Application started with command-line arguments: &#123;&#125;\"</span>, Arrays.toString(args.getSourceArgs()));</div><div class=\"line\">        log.info(<span class=\"string\">\"NonOptionArgs: &#123;&#125;\"</span>, args.getNonOptionArgs());</div><div class=\"line\">        log.info(<span class=\"string\">\"OptionNames: &#123;&#125;\"</span>, args.getOptionNames());</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> (String name : args.getOptionNames())&#123;</div><div class=\"line\">            log.info(<span class=\"string\">\"arg-\"</span> + name + <span class=\"string\">\"=\"</span> + args.getOptionValues(name));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库加密密码\"><a href=\"#数据库加密密码\" class=\"headerlink\" title=\"数据库加密密码\"></a>数据库加密密码</h2><h3 id=\"jasypt-spring-boot\"><a href=\"#jasypt-spring-boot\" class=\"headerlink\" title=\"jasypt-spring-boot\"></a>jasypt-spring-boot</h3><p>详细请参考: <a href=\"https://github.com/ulisesbocchio/jasypt-spring-boot\" target=\"_blank\" rel=\"external\">https://github.com/ulisesbocchio/jasypt-spring-boot</a><br>1 POM 中引用 jasypt-spring-boot<br>2 在 application.yml 中配置 config，可以配置从环境变量中读取加密盐</p>\n<blockquote>\n<p>jasypt:<br>    encryptor:<br>      algorithm: PBEWithMD5AndDES<br>      password: ${PWD_SALT_ENV} # from environment</p>\n</blockquote>\n<p>3 设置 password: ENC(加密后的密文)</p>\n<h2 id=\"Profile\"><a href=\"#Profile\" class=\"headerlink\" title=\"Profile\"></a>Profile</h2><p>1 在 resources 目录下新建 application-${profile}.yml<br>2 java -Dspring.profiles.active=${profile} -jar yourSpringBootJar.jar</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>…</p>\n"},{"title":"[Little Book] Spring Cloud 手记 001","date":"2017-11-01T04:54:20.000Z","_content":"[#IMG - Spring Cloud Projects](http://wx3.sinaimg.cn/mw690/897b1cc3ly1fl2qyqm1hgj20pk0cttco.jpg)\n## 官方文档\n\n[Spring Cloud](http://projects.spring.io/spring-cloud/)\n[Spring Cloud Projects Reference](http://projects.spring.io/spring-cloud/spring-cloud.html)\n\n## 博客链接\n感谢博客园 liumiaocn 的总结，以下是系列原文链接汇总：\n\n1. [Spring Cloud 介绍](http://blog.csdn.net/liumiaocn/article/details/53868315)\n1. [服务发现之 eureka](http://blog.csdn.net/liumiaocn/article/details/53886164)\n1. [业务逻辑服务](http://blog.csdn.net/liumiaocn/article/details/53922951)\n1. [API 网关之 Zuul](http://blog.csdn.net/liumiaocn/article/details/53941354)\n1. [断路器之 Hystrix](http://blog.csdn.net/liumiaocn/article/details/54015221)\n1. [统一配置管理之 spring cloud config](http://blog.csdn.net/liumiaocn/article/details/54309866)\n1. [用 docker 进行 Build/Ship/Run](http://blog.csdn.net/liumiaocn/article/details/54611891)\n\n## 坑\n[统一配置管理之 spring cloud config](http://blog.csdn.net/liumiaocn/article/details/54309866) 中的 client 端配置应放在 bootstrap.yml 中，\n否则不会生效。详见[bootstrap.yml](https://bitbucket.org/prometheus-imp/spring-cloud-service-user/src/855e47813969185decfa96df70de3ab0b18568d4/src/main/resources/bootstrap.yml?at=master&fileviewer=file-view-default)\n\n\n## Sample\n[Spring Could Samples](https://bitbucket.org/account/user/prometheus-imp/projects/CLOUD)\n","source":"_posts/littlebook/springcloud/spring-cloud-001.md","raw":"---\ntitle: \"[Little Book] Spring Cloud 手记 001\"\ndate: 2017-11-01 12:54:20\ntags: [programming, springboot, littlebook, springcloud]\n---\n[#IMG - Spring Cloud Projects](http://wx3.sinaimg.cn/mw690/897b1cc3ly1fl2qyqm1hgj20pk0cttco.jpg)\n## 官方文档\n\n[Spring Cloud](http://projects.spring.io/spring-cloud/)\n[Spring Cloud Projects Reference](http://projects.spring.io/spring-cloud/spring-cloud.html)\n\n## 博客链接\n感谢博客园 liumiaocn 的总结，以下是系列原文链接汇总：\n\n1. [Spring Cloud 介绍](http://blog.csdn.net/liumiaocn/article/details/53868315)\n1. [服务发现之 eureka](http://blog.csdn.net/liumiaocn/article/details/53886164)\n1. [业务逻辑服务](http://blog.csdn.net/liumiaocn/article/details/53922951)\n1. [API 网关之 Zuul](http://blog.csdn.net/liumiaocn/article/details/53941354)\n1. [断路器之 Hystrix](http://blog.csdn.net/liumiaocn/article/details/54015221)\n1. [统一配置管理之 spring cloud config](http://blog.csdn.net/liumiaocn/article/details/54309866)\n1. [用 docker 进行 Build/Ship/Run](http://blog.csdn.net/liumiaocn/article/details/54611891)\n\n## 坑\n[统一配置管理之 spring cloud config](http://blog.csdn.net/liumiaocn/article/details/54309866) 中的 client 端配置应放在 bootstrap.yml 中，\n否则不会生效。详见[bootstrap.yml](https://bitbucket.org/prometheus-imp/spring-cloud-service-user/src/855e47813969185decfa96df70de3ab0b18568d4/src/main/resources/bootstrap.yml?at=master&fileviewer=file-view-default)\n\n\n## Sample\n[Spring Could Samples](https://bitbucket.org/account/user/prometheus-imp/projects/CLOUD)\n","slug":"littlebook/springcloud/spring-cloud-001","published":1,"updated":"2017-11-09T08:30:27.038Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kito000d46tb7jslt1nw","content":"<p><a href=\"http://wx3.sinaimg.cn/mw690/897b1cc3ly1fl2qyqm1hgj20pk0cttco.jpg\" target=\"_blank\" rel=\"external\">#IMG - Spring Cloud Projects</a></p>\n<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><p><a href=\"http://projects.spring.io/spring-cloud/\" target=\"_blank\" rel=\"external\">Spring Cloud</a><br><a href=\"http://projects.spring.io/spring-cloud/spring-cloud.html\" target=\"_blank\" rel=\"external\">Spring Cloud Projects Reference</a></p>\n<h2 id=\"博客链接\"><a href=\"#博客链接\" class=\"headerlink\" title=\"博客链接\"></a>博客链接</h2><p>感谢博客园 liumiaocn 的总结，以下是系列原文链接汇总：</p>\n<ol>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53868315\" target=\"_blank\" rel=\"external\">Spring Cloud 介绍</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53886164\" target=\"_blank\" rel=\"external\">服务发现之 eureka</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53922951\" target=\"_blank\" rel=\"external\">业务逻辑服务</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53941354\" target=\"_blank\" rel=\"external\">API 网关之 Zuul</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/54015221\" target=\"_blank\" rel=\"external\">断路器之 Hystrix</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/54309866\" target=\"_blank\" rel=\"external\">统一配置管理之 spring cloud config</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/54611891\" target=\"_blank\" rel=\"external\">用 docker 进行 Build/Ship/Run</a></li>\n</ol>\n<h2 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h2><p><a href=\"http://blog.csdn.net/liumiaocn/article/details/54309866\" target=\"_blank\" rel=\"external\">统一配置管理之 spring cloud config</a> 中的 client 端配置应放在 bootstrap.yml 中，<br>否则不会生效。详见<a href=\"https://bitbucket.org/prometheus-imp/spring-cloud-service-user/src/855e47813969185decfa96df70de3ab0b18568d4/src/main/resources/bootstrap.yml?at=master&amp;fileviewer=file-view-default\" target=\"_blank\" rel=\"external\">bootstrap.yml</a></p>\n<h2 id=\"Sample\"><a href=\"#Sample\" class=\"headerlink\" title=\"Sample\"></a>Sample</h2><p><a href=\"https://bitbucket.org/account/user/prometheus-imp/projects/CLOUD\" target=\"_blank\" rel=\"external\">Spring Could Samples</a></p>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<p><a href=\"http://wx3.sinaimg.cn/mw690/897b1cc3ly1fl2qyqm1hgj20pk0cttco.jpg\" target=\"_blank\" rel=\"external\">#IMG - Spring Cloud Projects</a></p>\n<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><p><a href=\"http://projects.spring.io/spring-cloud/\" target=\"_blank\" rel=\"external\">Spring Cloud</a><br><a href=\"http://projects.spring.io/spring-cloud/spring-cloud.html\" target=\"_blank\" rel=\"external\">Spring Cloud Projects Reference</a></p>\n<h2 id=\"博客链接\"><a href=\"#博客链接\" class=\"headerlink\" title=\"博客链接\"></a>博客链接</h2><p>感谢博客园 liumiaocn 的总结，以下是系列原文链接汇总：</p>\n<ol>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53868315\" target=\"_blank\" rel=\"external\">Spring Cloud 介绍</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53886164\" target=\"_blank\" rel=\"external\">服务发现之 eureka</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53922951\" target=\"_blank\" rel=\"external\">业务逻辑服务</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/53941354\" target=\"_blank\" rel=\"external\">API 网关之 Zuul</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/54015221\" target=\"_blank\" rel=\"external\">断路器之 Hystrix</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/54309866\" target=\"_blank\" rel=\"external\">统一配置管理之 spring cloud config</a></li>\n<li><a href=\"http://blog.csdn.net/liumiaocn/article/details/54611891\" target=\"_blank\" rel=\"external\">用 docker 进行 Build/Ship/Run</a></li>\n</ol>\n<h2 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h2><p><a href=\"http://blog.csdn.net/liumiaocn/article/details/54309866\" target=\"_blank\" rel=\"external\">统一配置管理之 spring cloud config</a> 中的 client 端配置应放在 bootstrap.yml 中，<br>否则不会生效。详见<a href=\"https://bitbucket.org/prometheus-imp/spring-cloud-service-user/src/855e47813969185decfa96df70de3ab0b18568d4/src/main/resources/bootstrap.yml?at=master&amp;fileviewer=file-view-default\" target=\"_blank\" rel=\"external\">bootstrap.yml</a></p>\n<h2 id=\"Sample\"><a href=\"#Sample\" class=\"headerlink\" title=\"Sample\"></a>Sample</h2><p><a href=\"https://bitbucket.org/account/user/prometheus-imp/projects/CLOUD\" target=\"_blank\" rel=\"external\">Spring Could Samples</a></p>\n"},{"title":"常用开发工具列表","date":"2017-10-20T06:19:08.000Z","_content":"\n## 常用工具链接\n[Lombok](https://projectlombok.org/)\n","source":"_posts/pie/durian/develop-tools.md","raw":"---\ntitle: 常用开发工具列表\ndate: 2017-10-20 14:19:08\ntags: [tools, programming]\n---\n\n## 常用工具链接\n[Lombok](https://projectlombok.org/)\n","slug":"pie/durian/develop-tools","published":1,"updated":"2017-11-09T08:32:08.080Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kitv000e46tbebohjn2k","content":"<h2 id=\"常用工具链接\"><a href=\"#常用工具链接\" class=\"headerlink\" title=\"常用工具链接\"></a>常用工具链接</h2><p><a href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"external\">Lombok</a></p>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"常用工具链接\"><a href=\"#常用工具链接\" class=\"headerlink\" title=\"常用工具链接\"></a>常用工具链接</h2><p><a href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"external\">Lombok</a></p>\n"},{"title":"CouchBase的使用01","date":"2015-07-22T02:38:10.000Z","cover":"https://ironcorelabs.com/davenport/img/davenport-logo.png","_content":"\n## Preface\n本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。\n[CouchBase官网相关文档](http://docs.couchbase.com/)\n主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法\n<br>\n## Introduction\n对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。\n\n> CouchBase = CouchDB + Membase\n\nCouchDB -> 是一个开源的面向文档的数据库管理系统。\n\n> 1. CouchDB是分布式的数据库\n> 2. CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构\n> 3. 支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句\n\nMembase -> 是一个基于key/value的NoSQL开源项目。\n\n> 1. 持久化，自动将在线数据迁移到低延迟的存储介质的技术\n> 2. 多线程低锁争用\n> 3. 动态再平衡现有集群\n> 4. 支持快速失败转移来提供系统的高可用性\n\nCouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。\n传送门: [Couchbase介绍，更好的Cache系统](http://zhang.hu/couchbase/)\n\n## Installation\n[Supported platforms](http://docs.couchbase.com/admin/admin/Install/install-platforms.html)\nWindows:\n\n> + 官方下载安装包，不赘述。\n> + 注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。\n> + 由于比较占内存，建议CouchBase服务设为手动启动\n\nLunix:\n\n> + Red Hat/CentOS & Ubuntu/Debian\n\nMac OS X:\n\n> + 土豪，交个朋友吧\n> ![交个朋友吧](http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png)\n> !!! 2015年11月更新, 穷屌丝有Mac了...\n\n## Management\n\n> + Couchbase Web Console\n> + Command-line Interface (CLI)\n> + REST API\n> + Client\n\n## Architecture & Concepts\n\nCluster Manager\n\n> 可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。\n> 主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能\n> • Cluster management\n> • Node administration\n> • Node monitoring\n> • Statistics gathering and aggregation\n> • Run-time logging\n> • Multi-tenancy\n> • Security for administrative and client access\n> • Client proxy service to redirect requests\n\nNodes(or Couchbase Server)\n> 一个CouchBase Server的实例，部署在PC，VM或者云端\n>  Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口\n> 官网上对于Node与Cluster Manager的关系是这样描述的\n> `Every node within a Couchbase cluster includes the Cluster Manager component`\n\nCluster\n> 集群简单理解就是一群Node(≥1)\n> 一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分\n> 这使得每个Node都可以对整个cluster做管理，分析之类的操作\n> Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性\n> 而用户的数据在每个Node中又是以一个个vBucket存储的\n\nvBuckets\n> vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间\n> vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效\n> vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件\n> vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面\n> Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置\n> Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，[详解](http://zhang.hu/couchbase/)\n> ![vBuckets示意图](http://docs.couchbase.com/admin/admin/images/vbuckets.png)\n> 盗图于[vBuckets官方文档](http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html)\n\nRack Awareness\n> 翻译为机架感知，主要负责负载均衡，是企业版收费功能\n> 数据备份的管理和单点失效处理\n\n## Summary\n1. 数据动态分散\n2. 单点失效处理，不会造成数据404\n3. 良好的扩展弹性\n","source":"_posts/pie/durian/couchBase-tutorials.md","raw":"---\ntitle:  \"CouchBase的使用01\"\ndate: 2015-07-22 10:38:10\ncategories: [programming]\ntags: [programming, couchbase]\ncover: 'https://ironcorelabs.com/davenport/img/davenport-logo.png'\n---\n\n## Preface\n本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。\n[CouchBase官网相关文档](http://docs.couchbase.com/)\n主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法\n<br>\n## Introduction\n对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。\n\n> CouchBase = CouchDB + Membase\n\nCouchDB -> 是一个开源的面向文档的数据库管理系统。\n\n> 1. CouchDB是分布式的数据库\n> 2. CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构\n> 3. 支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句\n\nMembase -> 是一个基于key/value的NoSQL开源项目。\n\n> 1. 持久化，自动将在线数据迁移到低延迟的存储介质的技术\n> 2. 多线程低锁争用\n> 3. 动态再平衡现有集群\n> 4. 支持快速失败转移来提供系统的高可用性\n\nCouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。\n传送门: [Couchbase介绍，更好的Cache系统](http://zhang.hu/couchbase/)\n\n## Installation\n[Supported platforms](http://docs.couchbase.com/admin/admin/Install/install-platforms.html)\nWindows:\n\n> + 官方下载安装包，不赘述。\n> + 注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。\n> + 由于比较占内存，建议CouchBase服务设为手动启动\n\nLunix:\n\n> + Red Hat/CentOS & Ubuntu/Debian\n\nMac OS X:\n\n> + 土豪，交个朋友吧\n> ![交个朋友吧](http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png)\n> !!! 2015年11月更新, 穷屌丝有Mac了...\n\n## Management\n\n> + Couchbase Web Console\n> + Command-line Interface (CLI)\n> + REST API\n> + Client\n\n## Architecture & Concepts\n\nCluster Manager\n\n> 可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。\n> 主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能\n> • Cluster management\n> • Node administration\n> • Node monitoring\n> • Statistics gathering and aggregation\n> • Run-time logging\n> • Multi-tenancy\n> • Security for administrative and client access\n> • Client proxy service to redirect requests\n\nNodes(or Couchbase Server)\n> 一个CouchBase Server的实例，部署在PC，VM或者云端\n>  Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口\n> 官网上对于Node与Cluster Manager的关系是这样描述的\n> `Every node within a Couchbase cluster includes the Cluster Manager component`\n\nCluster\n> 集群简单理解就是一群Node(≥1)\n> 一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分\n> 这使得每个Node都可以对整个cluster做管理，分析之类的操作\n> Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性\n> 而用户的数据在每个Node中又是以一个个vBucket存储的\n\nvBuckets\n> vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间\n> vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效\n> vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件\n> vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面\n> Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置\n> Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，[详解](http://zhang.hu/couchbase/)\n> ![vBuckets示意图](http://docs.couchbase.com/admin/admin/images/vbuckets.png)\n> 盗图于[vBuckets官方文档](http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html)\n\nRack Awareness\n> 翻译为机架感知，主要负责负载均衡，是企业版收费功能\n> 数据备份的管理和单点失效处理\n\n## Summary\n1. 数据动态分散\n2. 单点失效处理，不会造成数据404\n3. 良好的扩展弹性\n","slug":"pie/durian/couchBase-tutorials","published":1,"updated":"2017-11-09T08:31:30.191Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kiu0000h46tbe9x56c9s","content":"<h2 id=\"Preface\"><a href=\"#Preface\" class=\"headerlink\" title=\"Preface\"></a>Preface</h2><p>本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。<br><a href=\"http://docs.couchbase.com/\" target=\"_blank\" rel=\"external\">CouchBase官网相关文档</a><br>主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法<br><br></p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。</p>\n<blockquote>\n<p>CouchBase = CouchDB + Membase</p>\n</blockquote>\n<p>CouchDB -&gt; 是一个开源的面向文档的数据库管理系统。</p>\n<blockquote>\n<ol>\n<li>CouchDB是分布式的数据库</li>\n<li>CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构</li>\n<li>支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句</li>\n</ol>\n</blockquote>\n<p>Membase -&gt; 是一个基于key/value的NoSQL开源项目。</p>\n<blockquote>\n<ol>\n<li>持久化，自动将在线数据迁移到低延迟的存储介质的技术</li>\n<li>多线程低锁争用</li>\n<li>动态再平衡现有集群</li>\n<li>支持快速失败转移来提供系统的高可用性</li>\n</ol>\n</blockquote>\n<p>CouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。<br>传送门: <a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">Couchbase介绍，更好的Cache系统</a></p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p><a href=\"http://docs.couchbase.com/admin/admin/Install/install-platforms.html\" target=\"_blank\" rel=\"external\">Supported platforms</a><br>Windows:</p>\n<blockquote>\n<ul>\n<li>官方下载安装包，不赘述。</li>\n<li>注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。</li>\n<li>由于比较占内存，建议CouchBase服务设为手动启动</li>\n</ul>\n</blockquote>\n<p>Lunix:</p>\n<blockquote>\n<ul>\n<li>Red Hat/CentOS &amp; Ubuntu/Debian</li>\n</ul>\n</blockquote>\n<p>Mac OS X:</p>\n<blockquote>\n<ul>\n<li>土豪，交个朋友吧<br><img src=\"http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png\" alt=\"交个朋友吧\"><br>!!! 2015年11月更新, 穷屌丝有Mac了…</li>\n</ul>\n</blockquote>\n<h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><blockquote>\n<ul>\n<li>Couchbase Web Console</li>\n<li>Command-line Interface (CLI)</li>\n<li>REST API</li>\n<li>Client</li>\n</ul>\n</blockquote>\n<h2 id=\"Architecture-amp-Concepts\"><a href=\"#Architecture-amp-Concepts\" class=\"headerlink\" title=\"Architecture &amp; Concepts\"></a>Architecture &amp; Concepts</h2><p>Cluster Manager</p>\n<blockquote>\n<p>可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。<br>主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能<br>• Cluster management<br>• Node administration<br>• Node monitoring<br>• Statistics gathering and aggregation<br>• Run-time logging<br>• Multi-tenancy<br>• Security for administrative and client access<br>• Client proxy service to redirect requests</p>\n</blockquote>\n<p>Nodes(or Couchbase Server)</p>\n<blockquote>\n<p>一个CouchBase Server的实例，部署在PC，VM或者云端<br> Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口<br>官网上对于Node与Cluster Manager的关系是这样描述的<br><code>Every node within a Couchbase cluster includes the Cluster Manager component</code></p>\n</blockquote>\n<p>Cluster</p>\n<blockquote>\n<p>集群简单理解就是一群Node(≥1)<br>一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分<br>这使得每个Node都可以对整个cluster做管理，分析之类的操作<br>Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性<br>而用户的数据在每个Node中又是以一个个vBucket存储的</p>\n</blockquote>\n<p>vBuckets</p>\n<blockquote>\n<p>vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间<br>vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效<br>vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件<br>vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面<br>Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置<br>Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，<a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">详解</a><br><img src=\"http://docs.couchbase.com/admin/admin/images/vbuckets.png\" alt=\"vBuckets示意图\"><br>盗图于<a href=\"http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html\" target=\"_blank\" rel=\"external\">vBuckets官方文档</a></p>\n</blockquote>\n<p>Rack Awareness</p>\n<blockquote>\n<p>翻译为机架感知，主要负责负载均衡，是企业版收费功能<br>数据备份的管理和单点失效处理</p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><ol>\n<li>数据动态分散</li>\n<li>单点失效处理，不会造成数据404</li>\n<li>良好的扩展弹性</li>\n</ol>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"Preface\"><a href=\"#Preface\" class=\"headerlink\" title=\"Preface\"></a>Preface</h2><p>本文主要基于CouchBase3.0的文档，概述基本概念与使用中注意的问题，希望能起到引导的作用。具体使用清自行阅读文档。<br><a href=\"http://docs.couchbase.com/\" target=\"_blank\" rel=\"external\">CouchBase官网相关文档</a><br>主要介绍了各个版本的特性，和针对不同的语言所相对应SDK的使用方法<br><br></p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p>对CouchBase背景感兴趣的同学可以阅读本段，如果你比较着急，可以自行跳过。</p>\n<blockquote>\n<p>CouchBase = CouchDB + Membase</p>\n</blockquote>\n<p>CouchDB -&gt; 是一个开源的面向文档的数据库管理系统。</p>\n<blockquote>\n<ol>\n<li>CouchDB是分布式的数据库</li>\n<li>CouchDB是面向文档的数据库，存储半结构化的数据，比较类似lucene的index结构</li>\n<li>支持REST API，可以让用户使用JavaScript来操作CouchDB数据库，也可以用JavaScript编写查询语句</li>\n</ol>\n</blockquote>\n<p>Membase -&gt; 是一个基于key/value的NoSQL开源项目。</p>\n<blockquote>\n<ol>\n<li>持久化，自动将在线数据迁移到低延迟的存储介质的技术</li>\n<li>多线程低锁争用</li>\n<li>动态再平衡现有集群</li>\n<li>支持快速失败转移来提供系统的高可用性</li>\n</ol>\n</blockquote>\n<p>CouchBase作为二者合并而生，自然聚合了二者的优点。所谓优点就应有所比较，而这需要对市面上各类缓存产品有着深入的了解。所以转载网络大牛对于缓存系统的比较心得。<br>传送门: <a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">Couchbase介绍，更好的Cache系统</a></p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p><a href=\"http://docs.couchbase.com/admin/admin/Install/install-platforms.html\" target=\"_blank\" rel=\"external\">Supported platforms</a><br>Windows:</p>\n<blockquote>\n<ul>\n<li>官方下载安装包，不赘述。</li>\n<li>注意CouchBase安装时会设定使用的内存和硬盘容量，视个人电脑配置、项目需求而定。</li>\n<li>由于比较占内存，建议CouchBase服务设为手动启动</li>\n</ul>\n</blockquote>\n<p>Lunix:</p>\n<blockquote>\n<ul>\n<li>Red Hat/CentOS &amp; Ubuntu/Debian</li>\n</ul>\n</blockquote>\n<p>Mac OS X:</p>\n<blockquote>\n<ul>\n<li>土豪，交个朋友吧<br><img src=\"http://2d.zol-img.com.cn/product/87/919/ce45drbn3kUU.png\" alt=\"交个朋友吧\"><br>!!! 2015年11月更新, 穷屌丝有Mac了…</li>\n</ul>\n</blockquote>\n<h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><blockquote>\n<ul>\n<li>Couchbase Web Console</li>\n<li>Command-line Interface (CLI)</li>\n<li>REST API</li>\n<li>Client</li>\n</ul>\n</blockquote>\n<h2 id=\"Architecture-amp-Concepts\"><a href=\"#Architecture-amp-Concepts\" class=\"headerlink\" title=\"Architecture &amp; Concepts\"></a>Architecture &amp; Concepts</h2><p>Cluster Manager</p>\n<blockquote>\n<p>可以理解为集群的管理中枢，顾名思义，就是负责管理集群的生命周期的。<br>主要负责日志、监控、安全，诸如此类，下面是官方给出的主要功能<br>• Cluster management<br>• Node administration<br>• Node monitoring<br>• Statistics gathering and aggregation<br>• Run-time logging<br>• Multi-tenancy<br>• Security for administrative and client access<br>• Client proxy service to redirect requests</p>\n</blockquote>\n<p>Nodes(or Couchbase Server)</p>\n<blockquote>\n<p>一个CouchBase Server的实例，部署在PC，VM或者云端<br> Node应该是identical的，提供数据访问读写功能，给外部提供一系列的接口<br>官网上对于Node与Cluster Manager的关系是这样描述的<br><code>Every node within a Couchbase cluster includes the Cluster Manager component</code></p>\n</blockquote>\n<p>Cluster</p>\n<blockquote>\n<p>集群简单理解就是一群Node(≥1)<br>一个cluster中的Nodes对外提供相同的，同时相互间是对等的，没有主从之分<br>这使得每个Node都可以对整个cluster做管理，分析之类的操作<br>Cluster的Node是可以增加删除的，对等性保证了Cluster内部良好的伸缩性<br>而用户的数据在每个Node中又是以一个个vBucket存储的</p>\n</blockquote>\n<p>vBuckets</p>\n<blockquote>\n<p>vBucket可以简单理解为一个数据集，独自占有Node为它开辟的一块空间<br>vBucket更像是一个个集装箱，它的存在使得Node之间数据备份更有效<br>vBucket对用户是不可见的，但是它却是Couchbase中最重要的一个组件<br>vBucket直译为桶，我们的数据为文件的形式保存在这些桶里面<br>Cluster里每个桶都有自己的编号，分布在不同的Node，Couchbase使用Hash算法计算你的数据存储的位置<br>Cluster维护一个全局的 vBucket 与服务器对应表，而不是简单的指向server，<a href=\"http://zhang.hu/couchbase/\" target=\"_blank\" rel=\"external\">详解</a><br><img src=\"http://docs.couchbase.com/admin/admin/images/vbuckets.png\" alt=\"vBuckets示意图\"><br>盗图于<a href=\"http://docs.couchbase.com/admin/admin/Concepts/concept-vBucket.html\" target=\"_blank\" rel=\"external\">vBuckets官方文档</a></p>\n</blockquote>\n<p>Rack Awareness</p>\n<blockquote>\n<p>翻译为机架感知，主要负责负载均衡，是企业版收费功能<br>数据备份的管理和单点失效处理</p>\n</blockquote>\n<h2 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h2><ol>\n<li>数据动态分散</li>\n<li>单点失效处理，不会造成数据404</li>\n<li>良好的扩展弹性</li>\n</ol>\n"},{"title":"Maven 项目 tomcat 热部署","date":"2017-11-09T08:12:39.000Z","_content":"\n## 非 Maven 项目\n对于非 Maven 项目的热部署，假设你的 web resource 根目录是 webapp, 那么你需要作如下设置：\n1. 编译 java 源代码到 webapp/WEB-INF/classes 目录下\n2. Copy 依赖 jar 包到 webapp/WEB-INF/lib 目录下\n3. 在 tomcat 中设置 xml 指向 webapp, 设置如下:\n  ```xml\n  <Context path=\"/appName\"\n    reloadable=\"true\"\n    docBase=\"your\\path\\to\\webapp\" >    \n  </Context>  \n  ```\n完成以上设置后，每次更改代码时， tomcat 会自动感知修改并加载，不需要手动部署项目或重启。\n\n## Maven 项目\n参考[maven tomcat plugin 实现热部署](https://github.com/junehappylove/june.web.new/wiki/maven-tomcat-plugin%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%83%A8%E7%BD%B2), 这里精简后如下:\n\n1. 在 tomcat 中配置用户权限, 即添加管理员帐号\n  修改 conf /tomcat-user.xml 文件\n  ```xml\n  <role rolename=\"manager-gui\" />  \n  <role rolename=\"manager-script\" />  \n  <user username=\"tomcat\" password=\"tomcat\" roles=\"manager-gui, manager-script\" />  \n  ```\n2. 在 maven 中添加 server, 配置 tomcat 的管理员帐号密码\n  修改 maven conf/settings.xml 文件, 给你本地的 maven 开启 tomcat 权限\n  ```xml\n  <server>    \n     <id>admin</id>    \n     <username>tomcat</username>    \n     <password>tomcat</password>    \n  </server>\n  ```\n3. 在 project 中添加插件, 以及 maven 中配置的 deploy 的 server\n  设置项目 deploy 配置(TODO: check tomcat version)\n  ```xml\n  <plugins>  \n    <!-- 第一种方式: apache官方tomcat插件,支持deploy -->  \n    <plugin>  \n        <groupId>org.apache.tomcat.maven</groupId>  \n        <artifactId>tomcat7-maven-plugin</artifactId>  \n        <version>2.0-SNAPSHOT</version>  \n        <configuration>  \n            <url>http://localhost:8080/manager/text</url>  \n            <server>admin</server>  \n        </configuration>  \n    </plugin>  \n    <!-- 第二种方式: 第三方tomcat插件,支持redeploy -->  \n    <plugin>  \n        <groupId>org.codehaus.mojo</groupId>  \n        <artifactId>tomcat-maven-plugin</artifactId>  \n        <version>1.1</version>  \n        <configuration>  \n            <url>http://localhost:8080/manager/text</url>  \n            <server>admin</server>  \n            <ignorePackaging>true</ignorePackaging>  \n        </configuration>  \n    </plugin>  \n</plugins>  \n  ```\n4. 命令行部署\n\n// TODO\n\n## 支持多 Profile (pro|qa|dev)\n\n// TODO\n","source":"_posts/pie/durian/hot-deploy-maven-project.md","raw":"---\ntitle: Maven 项目 tomcat 热部署\ndate: 2017-11-09 16:12:39\ntags: [programming, maven, tomcat]\n---\n\n## 非 Maven 项目\n对于非 Maven 项目的热部署，假设你的 web resource 根目录是 webapp, 那么你需要作如下设置：\n1. 编译 java 源代码到 webapp/WEB-INF/classes 目录下\n2. Copy 依赖 jar 包到 webapp/WEB-INF/lib 目录下\n3. 在 tomcat 中设置 xml 指向 webapp, 设置如下:\n  ```xml\n  <Context path=\"/appName\"\n    reloadable=\"true\"\n    docBase=\"your\\path\\to\\webapp\" >    \n  </Context>  \n  ```\n完成以上设置后，每次更改代码时， tomcat 会自动感知修改并加载，不需要手动部署项目或重启。\n\n## Maven 项目\n参考[maven tomcat plugin 实现热部署](https://github.com/junehappylove/june.web.new/wiki/maven-tomcat-plugin%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%83%A8%E7%BD%B2), 这里精简后如下:\n\n1. 在 tomcat 中配置用户权限, 即添加管理员帐号\n  修改 conf /tomcat-user.xml 文件\n  ```xml\n  <role rolename=\"manager-gui\" />  \n  <role rolename=\"manager-script\" />  \n  <user username=\"tomcat\" password=\"tomcat\" roles=\"manager-gui, manager-script\" />  \n  ```\n2. 在 maven 中添加 server, 配置 tomcat 的管理员帐号密码\n  修改 maven conf/settings.xml 文件, 给你本地的 maven 开启 tomcat 权限\n  ```xml\n  <server>    \n     <id>admin</id>    \n     <username>tomcat</username>    \n     <password>tomcat</password>    \n  </server>\n  ```\n3. 在 project 中添加插件, 以及 maven 中配置的 deploy 的 server\n  设置项目 deploy 配置(TODO: check tomcat version)\n  ```xml\n  <plugins>  \n    <!-- 第一种方式: apache官方tomcat插件,支持deploy -->  \n    <plugin>  \n        <groupId>org.apache.tomcat.maven</groupId>  \n        <artifactId>tomcat7-maven-plugin</artifactId>  \n        <version>2.0-SNAPSHOT</version>  \n        <configuration>  \n            <url>http://localhost:8080/manager/text</url>  \n            <server>admin</server>  \n        </configuration>  \n    </plugin>  \n    <!-- 第二种方式: 第三方tomcat插件,支持redeploy -->  \n    <plugin>  \n        <groupId>org.codehaus.mojo</groupId>  \n        <artifactId>tomcat-maven-plugin</artifactId>  \n        <version>1.1</version>  \n        <configuration>  \n            <url>http://localhost:8080/manager/text</url>  \n            <server>admin</server>  \n            <ignorePackaging>true</ignorePackaging>  \n        </configuration>  \n    </plugin>  \n</plugins>  \n  ```\n4. 命令行部署\n\n// TODO\n\n## 支持多 Profile (pro|qa|dev)\n\n// TODO\n","slug":"pie/durian/hot-deploy-maven-project","published":1,"updated":"2017-11-09T10:17:17.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kiu3000j46tb2dwceo4r","content":"<h2 id=\"非-Maven-项目\"><a href=\"#非-Maven-项目\" class=\"headerlink\" title=\"非 Maven 项目\"></a>非 Maven 项目</h2><p>对于非 Maven 项目的热部署，假设你的 web resource 根目录是 webapp, 那么你需要作如下设置：</p>\n<ol>\n<li>编译 java 源代码到 webapp/WEB-INF/classes 目录下</li>\n<li>Copy 依赖 jar 包到 webapp/WEB-INF/lib 目录下</li>\n<li>在 tomcat 中设置 xml 指向 webapp, 设置如下:<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Context</span> <span class=\"attr\">path</span>=<span class=\"string\">\"/appName\"</span></span></div><div class=\"line\"><span class=\"tag\">  <span class=\"attr\">reloadable</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">  <span class=\"attr\">docBase</span>=<span class=\"string\">\"your\\path\\to\\webapp\"</span> &gt;</span>    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Context</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>完成以上设置后，每次更改代码时， tomcat 会自动感知修改并加载，不需要手动部署项目或重启。</p>\n<h2 id=\"Maven-项目\"><a href=\"#Maven-项目\" class=\"headerlink\" title=\"Maven 项目\"></a>Maven 项目</h2><p>参考<a href=\"https://github.com/junehappylove/june.web.new/wiki/maven-tomcat-plugin%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%83%A8%E7%BD%B2\" target=\"_blank\" rel=\"external\">maven tomcat plugin 实现热部署</a>, 这里精简后如下:</p>\n<ol>\n<li><p>在 tomcat 中配置用户权限, 即添加管理员帐号<br>修改 conf /tomcat-user.xml 文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">role</span> <span class=\"attr\">rolename</span>=<span class=\"string\">\"manager-gui\"</span> /&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">role</span> <span class=\"attr\">rolename</span>=<span class=\"string\">\"manager-script\"</span> /&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">user</span> <span class=\"attr\">username</span>=<span class=\"string\">\"tomcat\"</span> <span class=\"attr\">password</span>=<span class=\"string\">\"tomcat\"</span> <span class=\"attr\">roles</span>=<span class=\"string\">\"manager-gui, manager-script\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在 maven 中添加 server, 配置 tomcat 的管理员帐号密码<br>修改 maven conf/settings.xml 文件, 给你本地的 maven 开启 tomcat 权限</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>    </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>    </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>tomcat<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span>    </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>tomcat<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span>    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在 project 中添加插件, 以及 maven 中配置的 deploy 的 server<br>设置项目 deploy 配置(TODO: check tomcat version)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 第一种方式: apache官方tomcat插件,支持deploy --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://localhost:8080/manager/text<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 第二种方式: 第三方tomcat插件,支持redeploy --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.mojo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://localhost:8080/manager/text<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ignorePackaging</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">ignorePackaging</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>命令行部署</p>\n</li>\n</ol>\n<p>// TODO</p>\n<h2 id=\"支持多-Profile-pro-qa-dev\"><a href=\"#支持多-Profile-pro-qa-dev\" class=\"headerlink\" title=\"支持多 Profile (pro|qa|dev)\"></a>支持多 Profile (pro|qa|dev)</h2><p>// TODO</p>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<h2 id=\"非-Maven-项目\"><a href=\"#非-Maven-项目\" class=\"headerlink\" title=\"非 Maven 项目\"></a>非 Maven 项目</h2><p>对于非 Maven 项目的热部署，假设你的 web resource 根目录是 webapp, 那么你需要作如下设置：</p>\n<ol>\n<li>编译 java 源代码到 webapp/WEB-INF/classes 目录下</li>\n<li>Copy 依赖 jar 包到 webapp/WEB-INF/lib 目录下</li>\n<li>在 tomcat 中设置 xml 指向 webapp, 设置如下:<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Context</span> <span class=\"attr\">path</span>=<span class=\"string\">\"/appName\"</span></span></div><div class=\"line\"><span class=\"tag\">  <span class=\"attr\">reloadable</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">  <span class=\"attr\">docBase</span>=<span class=\"string\">\"your\\path\\to\\webapp\"</span> &gt;</span>    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Context</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>完成以上设置后，每次更改代码时， tomcat 会自动感知修改并加载，不需要手动部署项目或重启。</p>\n<h2 id=\"Maven-项目\"><a href=\"#Maven-项目\" class=\"headerlink\" title=\"Maven 项目\"></a>Maven 项目</h2><p>参考<a href=\"https://github.com/junehappylove/june.web.new/wiki/maven-tomcat-plugin%E5%AE%9E%E7%8E%B0%E7%83%AD%E9%83%A8%E7%BD%B2\" target=\"_blank\" rel=\"external\">maven tomcat plugin 实现热部署</a>, 这里精简后如下:</p>\n<ol>\n<li><p>在 tomcat 中配置用户权限, 即添加管理员帐号<br>修改 conf /tomcat-user.xml 文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">role</span> <span class=\"attr\">rolename</span>=<span class=\"string\">\"manager-gui\"</span> /&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">role</span> <span class=\"attr\">rolename</span>=<span class=\"string\">\"manager-script\"</span> /&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">user</span> <span class=\"attr\">username</span>=<span class=\"string\">\"tomcat\"</span> <span class=\"attr\">password</span>=<span class=\"string\">\"tomcat\"</span> <span class=\"attr\">roles</span>=<span class=\"string\">\"manager-gui, manager-script\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在 maven 中添加 server, 配置 tomcat 的管理员帐号密码<br>修改 maven conf/settings.xml 文件, 给你本地的 maven 开启 tomcat 权限</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>    </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>    </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>tomcat<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span>    </div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>tomcat<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span>    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在 project 中添加插件, 以及 maven 中配置的 deploy 的 server<br>设置项目 deploy 配置(TODO: check tomcat version)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span>  </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 第一种方式: apache官方tomcat插件,支持deploy --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://localhost:8080/manager/text<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 第二种方式: 第三方tomcat插件,支持redeploy --&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.mojo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://localhost:8080/manager/text<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>admin<span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span>  </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ignorePackaging</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">ignorePackaging</span>&gt;</span>  </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>  </div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span>  </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>命令行部署</p>\n</li>\n</ol>\n<p>// TODO</p>\n<h2 id=\"支持多-Profile-pro-qa-dev\"><a href=\"#支持多-Profile-pro-qa-dev\" class=\"headerlink\" title=\"支持多 Profile (pro|qa|dev)\"></a>支持多 Profile (pro|qa|dev)</h2><p>// TODO</p>\n"},{"title":"Java unit test中启用Jetty Server","date":"2015-04-29T02:38:10.000Z","cover":"https://www.openshift.com/images/openshift.svg","_content":"\nJetty 是一个开源的servlet容器，可以为java网络应用提供一个便捷快速的网络和web连接服务。\n\n所谓便捷快速，是因为它以jar包的形式发布，简单易用，默认配置即可满足大部分的需求，嵌入到程序中所需代码非常少。\n\n由于Jetty的易用，易嵌，可扩展，我们常将之用于我们的unit test当中。这里仅就unit test展开讨论。\n<br>\n首先，我们用maven引入jar包，版本可以选择你希望的版本(你可以在[Jetty官网](http://www.eclipse.org/jetty/documentation/)上找到相关版本号)。\n\n```xml\n<properties>\n  <jettyVersion>9.0.2.v20130417</jettyVersion>\n</properties>\n```\n\n```xml\n<dependency>\n  <groupId>org.eclipse.jetty</groupId>\n  <artifactId>jetty-server</artifactId>\n  <version>${jettyVersion}</version>\n  <scope>test</scope>\n</dependency>\n```\n\n如果我们在maven框架下使用jetty plugin,运行 `mvn jetty:run` 等命令, 须配置\n\n```xml\n<build>\n    <plugins>\n      <plugin>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-maven-plugin</artifactId>\n        <version>${jettyVersion}</version>\n      </plugin>\n    </plugins>\n</build>\n```\n\nJetty针对spring框架有代码嵌入和xml配置两种方式，这里我们只是在test的时候用到它。\n另外，test的时候我们经常读取JSON数据，所以引入jackson的包，我们也可以使用lombok简化代码，额外jar包如下：\n\n```xml\n<dependencies>\n<dependency>\n  <groupId>org.dbunit</groupId>\n  <artifactId>dbunit</artifactId>\n  <version>2.4.8</version>\n  <scope>test</scope>\n  <exclusions>\n    <exclusion>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n    </exclusion>\n    <exclusion>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n    </exclusion>\n  </exclusions>\n</dependency>\n\n<dependency>\n    <groupId>org.codehaus.jackson</groupId>\n    <artifactId>jackson-jaxrs</artifactId>\n    <version>1.9.13</version>\n</dependency>\n\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <version>1.14.4</version>\n    <scope>provided</scope>\n</dependency>\n</dependencies>\n```\n\n我们定义一个简单的请求来方便JSON文件转化为http请求\n\n```java\npackage com.mozs.api.mymaven;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\n/**\n*\n* @author zhangshuai\n*\n*/\n@Getter\n@Setter\npublic class SimpleRequest {\n  /**\n   * method (GET, POST)\n   */\n  private String method;\n\n  /**\n   * uriPath ('/object/create/', '/object/get/', '/object/update/' ...)\n   */\n  private String uriPath;\n\n  /**\n   * request parameter / json\n   */\n  private String jsonRequest;\n\n  /**\n   * request parameter / csv\n   */\n  private String csvContent;\n}\n```\n\n将jetty嵌入到java代码中，我们需要继承AbstractHandler，并重写handle方法，里面我们处理\n\n```java\npackage com.mozs.api.mymaven;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\n/**\n* a jetty server handler that can accept request and return response\n*\n*/\npublic class JettyServerHandler extends AbstractHandler {\n\n  public JettyServerHandler() {\n  }\n\n  @Override\n  public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n      try {\n          // 处理请求\n          generateRequest(baseRequest);\n\n          response.setContentType(\"application/json;charset=utf-8\");\n          response.setStatus(200);\n          baseRequest.setHandled(true);\n\n      } catch (Exception e) {\n          e.printStackTrace();\n      }\n  }\n\n  private SimpleRequest generateRequest(Request baseRequest) throws Exception{\n\n      SimpleRequest result = new SimpleRequest();\n\n      result.setMethod(baseRequest.getMethod());\n      result.setUriPath(baseRequest.getPathInfo());\n\n      if (\"GET\".equals(result.getMethod())) {\n          // 解析get后面的参数\n          result.setJsonRequest(TestUtil.convertRequestToJson(baseRequest.getQueryString()));\n\n      } else if (\"POST\".equals(result.getMethod())) {\n          // 解析post传入参数\n      }\n\n      return result;\n  }\n\n}\n```\n","source":"_posts/pie/durian/java-jetty-server-in-junit.md","raw":"---\ntitle: Java unit test中启用Jetty Server\ndate: 2015-04-29 10:38:10\ncategories: [programming, test]\ntags:\ncover: \"https://www.openshift.com/images/openshift.svg\"\n---\n\nJetty 是一个开源的servlet容器，可以为java网络应用提供一个便捷快速的网络和web连接服务。\n\n所谓便捷快速，是因为它以jar包的形式发布，简单易用，默认配置即可满足大部分的需求，嵌入到程序中所需代码非常少。\n\n由于Jetty的易用，易嵌，可扩展，我们常将之用于我们的unit test当中。这里仅就unit test展开讨论。\n<br>\n首先，我们用maven引入jar包，版本可以选择你希望的版本(你可以在[Jetty官网](http://www.eclipse.org/jetty/documentation/)上找到相关版本号)。\n\n```xml\n<properties>\n  <jettyVersion>9.0.2.v20130417</jettyVersion>\n</properties>\n```\n\n```xml\n<dependency>\n  <groupId>org.eclipse.jetty</groupId>\n  <artifactId>jetty-server</artifactId>\n  <version>${jettyVersion}</version>\n  <scope>test</scope>\n</dependency>\n```\n\n如果我们在maven框架下使用jetty plugin,运行 `mvn jetty:run` 等命令, 须配置\n\n```xml\n<build>\n    <plugins>\n      <plugin>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-maven-plugin</artifactId>\n        <version>${jettyVersion}</version>\n      </plugin>\n    </plugins>\n</build>\n```\n\nJetty针对spring框架有代码嵌入和xml配置两种方式，这里我们只是在test的时候用到它。\n另外，test的时候我们经常读取JSON数据，所以引入jackson的包，我们也可以使用lombok简化代码，额外jar包如下：\n\n```xml\n<dependencies>\n<dependency>\n  <groupId>org.dbunit</groupId>\n  <artifactId>dbunit</artifactId>\n  <version>2.4.8</version>\n  <scope>test</scope>\n  <exclusions>\n    <exclusion>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n    </exclusion>\n    <exclusion>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n    </exclusion>\n  </exclusions>\n</dependency>\n\n<dependency>\n    <groupId>org.codehaus.jackson</groupId>\n    <artifactId>jackson-jaxrs</artifactId>\n    <version>1.9.13</version>\n</dependency>\n\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <version>1.14.4</version>\n    <scope>provided</scope>\n</dependency>\n</dependencies>\n```\n\n我们定义一个简单的请求来方便JSON文件转化为http请求\n\n```java\npackage com.mozs.api.mymaven;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\n/**\n*\n* @author zhangshuai\n*\n*/\n@Getter\n@Setter\npublic class SimpleRequest {\n  /**\n   * method (GET, POST)\n   */\n  private String method;\n\n  /**\n   * uriPath ('/object/create/', '/object/get/', '/object/update/' ...)\n   */\n  private String uriPath;\n\n  /**\n   * request parameter / json\n   */\n  private String jsonRequest;\n\n  /**\n   * request parameter / csv\n   */\n  private String csvContent;\n}\n```\n\n将jetty嵌入到java代码中，我们需要继承AbstractHandler，并重写handle方法，里面我们处理\n\n```java\npackage com.mozs.api.mymaven;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.eclipse.jetty.server.Request;\nimport org.eclipse.jetty.server.handler.AbstractHandler;\n\n/**\n* a jetty server handler that can accept request and return response\n*\n*/\npublic class JettyServerHandler extends AbstractHandler {\n\n  public JettyServerHandler() {\n  }\n\n  @Override\n  public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n      try {\n          // 处理请求\n          generateRequest(baseRequest);\n\n          response.setContentType(\"application/json;charset=utf-8\");\n          response.setStatus(200);\n          baseRequest.setHandled(true);\n\n      } catch (Exception e) {\n          e.printStackTrace();\n      }\n  }\n\n  private SimpleRequest generateRequest(Request baseRequest) throws Exception{\n\n      SimpleRequest result = new SimpleRequest();\n\n      result.setMethod(baseRequest.getMethod());\n      result.setUriPath(baseRequest.getPathInfo());\n\n      if (\"GET\".equals(result.getMethod())) {\n          // 解析get后面的参数\n          result.setJsonRequest(TestUtil.convertRequestToJson(baseRequest.getQueryString()));\n\n      } else if (\"POST\".equals(result.getMethod())) {\n          // 解析post传入参数\n      }\n\n      return result;\n  }\n\n}\n```\n","slug":"pie/durian/java-jetty-server-in-junit","published":1,"updated":"2017-11-09T08:31:47.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9t8kiu6000m46tb02y3ql6u","content":"<p>Jetty 是一个开源的servlet容器，可以为java网络应用提供一个便捷快速的网络和web连接服务。</p>\n<p>所谓便捷快速，是因为它以jar包的形式发布，简单易用，默认配置即可满足大部分的需求，嵌入到程序中所需代码非常少。</p>\n<p>由于Jetty的易用，易嵌，可扩展，我们常将之用于我们的unit test当中。这里仅就unit test展开讨论。<br><br><br>首先，我们用maven引入jar包，版本可以选择你希望的版本(你可以在<a href=\"http://www.eclipse.org/jetty/documentation/\" target=\"_blank\" rel=\"external\">Jetty官网</a>上找到相关版本号)。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">jettyVersion</span>&gt;</span>9.0.2.v20130417<span class=\"tag\">&lt;/<span class=\"name\">jettyVersion</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.eclipse.jetty<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jetty-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;jettyVersion&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>如果我们在maven框架下使用jetty plugin,运行 <code>mvn jetty:run</code> 等命令, 须配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.eclipse.jetty<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jetty-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;jettyVersion&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Jetty针对spring框架有代码嵌入和xml配置两种方式，这里我们只是在test的时候用到它。<br>另外，test的时候我们经常读取JSON数据，所以引入jackson的包，我们也可以使用lombok简化代码，额外jar包如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.dbunit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dbunit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.jackson<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jackson-jaxrs<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.13<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.14.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>我们定义一个简单的请求来方便JSON文件转化为http请求</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.mozs.api.mymaven;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</div><div class=\"line\"><span class=\"keyword\">import</span> lombok.Setter;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">*</span></div><div class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> zhangshuai</span></div><div class=\"line\"><span class=\"comment\">*</span></div><div class=\"line\"><span class=\"comment\">*/</span></div><div class=\"line\"><span class=\"meta\">@Getter</span></div><div class=\"line\"><span class=\"meta\">@Setter</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleRequest</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * method (GET, POST)</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String method;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * uriPath ('/object/create/', '/object/get/', '/object/update/' ...)</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String uriPath;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * request parameter / json</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String jsonRequest;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * request parameter / csv</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String csvContent;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>将jetty嵌入到java代码中，我们需要继承AbstractHandler，并重写handle方法，里面我们处理</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.mozs.api.mymaven;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.eclipse.jetty.server.Request;</div><div class=\"line\"><span class=\"keyword\">import</span> org.eclipse.jetty.server.handler.AbstractHandler;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">* a jetty server handler that can accept request and return response</span></div><div class=\"line\"><span class=\"comment\">*</span></div><div class=\"line\"><span class=\"comment\">*/</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JettyServerHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractHandler</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JettyServerHandler</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@Override</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(String target, Request baseRequest, HttpServletRequest request,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">          HttpServletResponse response)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">          <span class=\"comment\">// 处理请求</span></div><div class=\"line\">          generateRequest(baseRequest);</div><div class=\"line\"></div><div class=\"line\">          response.setContentType(<span class=\"string\">\"application/json;charset=utf-8\"</span>);</div><div class=\"line\">          response.setStatus(<span class=\"number\">200</span>);</div><div class=\"line\">          baseRequest.setHandled(<span class=\"keyword\">true</span>);</div><div class=\"line\"></div><div class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">          e.printStackTrace();</div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> SimpleRequest <span class=\"title\">generateRequest</span><span class=\"params\">(Request baseRequest)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\"></div><div class=\"line\">      SimpleRequest result = <span class=\"keyword\">new</span> SimpleRequest();</div><div class=\"line\"></div><div class=\"line\">      result.setMethod(baseRequest.getMethod());</div><div class=\"line\">      result.setUriPath(baseRequest.getPathInfo());</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"string\">\"GET\"</span>.equals(result.getMethod())) &#123;</div><div class=\"line\">          <span class=\"comment\">// 解析get后面的参数</span></div><div class=\"line\">          result.setJsonRequest(TestUtil.convertRequestToJson(baseRequest.getQueryString()));</div><div class=\"line\"></div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">\"POST\"</span>.equals(result.getMethod())) &#123;</div><div class=\"line\">          <span class=\"comment\">// 解析post传入参数</span></div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">return</span> result;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{"projects":[{"name":"Hexo","url":"https://hexo.io/","desc":"A fast, simple & powerful blog framework"}]}},"excerpt":"","more":"<p>Jetty 是一个开源的servlet容器，可以为java网络应用提供一个便捷快速的网络和web连接服务。</p>\n<p>所谓便捷快速，是因为它以jar包的形式发布，简单易用，默认配置即可满足大部分的需求，嵌入到程序中所需代码非常少。</p>\n<p>由于Jetty的易用，易嵌，可扩展，我们常将之用于我们的unit test当中。这里仅就unit test展开讨论。<br><br><br>首先，我们用maven引入jar包，版本可以选择你希望的版本(你可以在<a href=\"http://www.eclipse.org/jetty/documentation/\" target=\"_blank\" rel=\"external\">Jetty官网</a>上找到相关版本号)。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">jettyVersion</span>&gt;</span>9.0.2.v20130417<span class=\"tag\">&lt;/<span class=\"name\">jettyVersion</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.eclipse.jetty<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jetty-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;jettyVersion&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>如果我们在maven框架下使用jetty plugin,运行 <code>mvn jetty:run</code> 等命令, 须配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.eclipse.jetty<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jetty-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;jettyVersion&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Jetty针对spring框架有代码嵌入和xml配置两种方式，这里我们只是在test的时候用到它。<br>另外，test的时候我们经常读取JSON数据，所以引入jackson的包，我们也可以使用lombok简化代码，额外jar包如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.dbunit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dbunit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.jackson<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jackson-jaxrs<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.13<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.14.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>我们定义一个简单的请求来方便JSON文件转化为http请求</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.mozs.api.mymaven;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> lombok.Getter;</div><div class=\"line\"><span class=\"keyword\">import</span> lombok.Setter;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">*</span></div><div class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> zhangshuai</span></div><div class=\"line\"><span class=\"comment\">*</span></div><div class=\"line\"><span class=\"comment\">*/</span></div><div class=\"line\"><span class=\"meta\">@Getter</span></div><div class=\"line\"><span class=\"meta\">@Setter</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleRequest</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * method (GET, POST)</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String method;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * uriPath ('/object/create/', '/object/get/', '/object/update/' ...)</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String uriPath;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * request parameter / json</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String jsonRequest;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">   * request parameter / csv</span></div><div class=\"line\"><span class=\"comment\">   */</span></div><div class=\"line\">  <span class=\"keyword\">private</span> String csvContent;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>将jetty嵌入到java代码中，我们需要继承AbstractHandler，并重写handle方法，里面我们处理</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.mozs.api.mymaven;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> org.eclipse.jetty.server.Request;</div><div class=\"line\"><span class=\"keyword\">import</span> org.eclipse.jetty.server.handler.AbstractHandler;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">* a jetty server handler that can accept request and return response</span></div><div class=\"line\"><span class=\"comment\">*</span></div><div class=\"line\"><span class=\"comment\">*/</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JettyServerHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractHandler</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JettyServerHandler</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@Override</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(String target, Request baseRequest, HttpServletRequest request,</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"params\">          HttpServletResponse response)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">          <span class=\"comment\">// 处理请求</span></div><div class=\"line\">          generateRequest(baseRequest);</div><div class=\"line\"></div><div class=\"line\">          response.setContentType(<span class=\"string\">\"application/json;charset=utf-8\"</span>);</div><div class=\"line\">          response.setStatus(<span class=\"number\">200</span>);</div><div class=\"line\">          baseRequest.setHandled(<span class=\"keyword\">true</span>);</div><div class=\"line\"></div><div class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">          e.printStackTrace();</div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> SimpleRequest <span class=\"title\">generateRequest</span><span class=\"params\">(Request baseRequest)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\"></div><div class=\"line\">      SimpleRequest result = <span class=\"keyword\">new</span> SimpleRequest();</div><div class=\"line\"></div><div class=\"line\">      result.setMethod(baseRequest.getMethod());</div><div class=\"line\">      result.setUriPath(baseRequest.getPathInfo());</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"string\">\"GET\"</span>.equals(result.getMethod())) &#123;</div><div class=\"line\">          <span class=\"comment\">// 解析get后面的参数</span></div><div class=\"line\">          result.setJsonRequest(TestUtil.convertRequestToJson(baseRequest.getQueryString()));</div><div class=\"line\"></div><div class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">\"POST\"</span>.equals(result.getMethod())) &#123;</div><div class=\"line\">          <span class=\"comment\">// 解析post传入参数</span></div><div class=\"line\">      &#125;</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">return</span> result;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9t8kisl000246tbghi5kxpg","category_id":"cj9t8kisp000346tb21q0lk9l","_id":"cj9t8kist000646tb5g906hk0"},{"post_id":"cj9t8kiu0000h46tbe9x56c9s","category_id":"cj9t8kisp000346tb21q0lk9l","_id":"cj9t8kiub000o46tb98q85cr4"},{"post_id":"cj9t8kiu6000m46tb02y3ql6u","category_id":"cj9t8kisp000346tb21q0lk9l","_id":"cj9t8kiui000x46tbmbjo0zd9"},{"post_id":"cj9t8kiu6000m46tb02y3ql6u","category_id":"cj9t8kiud000r46tbb1heufjc","_id":"cj9t8kiuj000z46tbjs2qvru9"}],"PostTag":[{"post_id":"cj9t8kisl000246tbghi5kxpg","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kisv000746tbac11gksh"},{"post_id":"cj9t8kisl000246tbghi5kxpg","tag_id":"cj9t8kiss000546tb5plvz1n8","_id":"cj9t8kisw000846tbayktqkn8"},{"post_id":"cj9t8kitf000946tb8sze152b","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kitz000g46tbwaeo5x78"},{"post_id":"cj9t8kitf000946tb8sze152b","tag_id":"cj9t8kitl000b46tbn7i2w6lb","_id":"cj9t8kiu2000i46tbmpgh79gp"},{"post_id":"cj9t8kiu0000h46tbe9x56c9s","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kiu5000l46tbs9asp4dk"},{"post_id":"cj9t8kiu0000h46tbe9x56c9s","tag_id":"cj9t8kiss000546tb5plvz1n8","_id":"cj9t8kiua000n46tb2ro64w1h"},{"post_id":"cj9t8kiti000a46tbn2sbxk9f","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kiuc000q46tb6gfbnlp9"},{"post_id":"cj9t8kiti000a46tbn2sbxk9f","tag_id":"cj9t8kitl000b46tbn7i2w6lb","_id":"cj9t8kiue000s46tb0gkzp00n"},{"post_id":"cj9t8kitl000c46tb58bw6j8q","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kiuh000u46tbyaxhq3xa"},{"post_id":"cj9t8kitl000c46tb58bw6j8q","tag_id":"cj9t8kiu4000k46tbj7ezutkj","_id":"cj9t8kiuh000v46tb7y67o2zo"},{"post_id":"cj9t8kitl000c46tb58bw6j8q","tag_id":"cj9t8kiuc000p46tbm0wcm32o","_id":"cj9t8kiuj000y46tb1venlbic"},{"post_id":"cj9t8kito000d46tb7jslt1nw","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kiul001246tb0wjw18ju"},{"post_id":"cj9t8kito000d46tb7jslt1nw","tag_id":"cj9t8kiu4000k46tbj7ezutkj","_id":"cj9t8kium001346tbkc0kbvd6"},{"post_id":"cj9t8kito000d46tb7jslt1nw","tag_id":"cj9t8kiuc000p46tbm0wcm32o","_id":"cj9t8kium001546tb32hgn4c3"},{"post_id":"cj9t8kito000d46tb7jslt1nw","tag_id":"cj9t8kiuk001046tbe9nx3mkj","_id":"cj9t8kium001646tb752y59hg"},{"post_id":"cj9t8kitv000e46tbebohjn2k","tag_id":"cj9t8kiul001146tbgrkkvoil","_id":"cj9t8kium001846tb267im42u"},{"post_id":"cj9t8kitv000e46tbebohjn2k","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kiun001946tb2dmzal3k"},{"post_id":"cj9t8kiu3000j46tb2dwceo4r","tag_id":"cj9t8kisr000446tbzp8dgtej","_id":"cj9t8kiun001a46tbkshggv8a"},{"post_id":"cj9t8kiu3000j46tb2dwceo4r","tag_id":"cj9t8kium001446tbc918aluh","_id":"cj9t8kiun001b46tb4akgyxop"},{"post_id":"cj9t8kiu3000j46tb2dwceo4r","tag_id":"cj9t8kium001746tbljkpwsx2","_id":"cj9t8kiun001c46tb6jooxj2x"}],"Tag":[{"name":"programming","_id":"cj9t8kisr000446tbzp8dgtej"},{"name":"couchbase","_id":"cj9t8kiss000546tb5plvz1n8"},{"name":"docker","_id":"cj9t8kitl000b46tbn7i2w6lb"},{"name":"springboot","_id":"cj9t8kiu4000k46tbj7ezutkj"},{"name":"littlebook","_id":"cj9t8kiuc000p46tbm0wcm32o"},{"name":"springcloud","_id":"cj9t8kiuk001046tbe9nx3mkj"},{"name":"tools","_id":"cj9t8kiul001146tbgrkkvoil"},{"name":"maven","_id":"cj9t8kium001446tbc918aluh"},{"name":"tomcat","_id":"cj9t8kium001746tbljkpwsx2"}]}}